[{"/Users/zepingchen/Desktop/back_up/printer_web_interface/src/index.js":"1","/Users/zepingchen/Desktop/back_up/printer_web_interface/src/App.js":"2","/Users/zepingchen/Desktop/back_up/printer_web_interface/src/components/LeftPanel.js":"3","/Users/zepingchen/Desktop/back_up/printer_web_interface/src/components/WebSocket.js":"4","/Users/zepingchen/Desktop/back_up/printer_web_interface/src/components/RightPanel.js":"5","/Users/zepingchen/Desktop/back_up/printer_web_interface/src/components/Config.js":"6","/Users/zepingchen/Desktop/back_up/printer_web_interface/src/components/Header.js":"7","/Users/zepingchen/Desktop/back_up/printer_web_interface/src/components/Reducer.js":"8","/Users/zepingchen/Desktop/back_up/printer_web_interface/src/components/Context.js":"9","/Users/zepingchen/Desktop/back_up/printer_web_interface/src/components/Fan.js":"10","/Users/zepingchen/Desktop/back_up/printer_web_interface/src/components/Console.js":"11","/Users/zepingchen/Desktop/back_up/printer_web_interface/src/components/Gcode.js":"12","/Users/zepingchen/Desktop/back_up/printer_web_interface/src/components/Printer.js":"13","/Users/zepingchen/Desktop/back_up/printer_web_interface/src/components/Thermal.js":"14","/Users/zepingchen/Desktop/back_up/printer_web_interface/src/components/ThermalChart.js":"15","/Users/zepingchen/Desktop/back_up/printer_web_interface/src/assets/canvasjs.react.js":"16","/Users/zepingchen/Desktop/back_up/printer_web_interface/src/assets/canvasjs.min.js":"17","/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/index.js":"18","/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/App.js":"19","/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/components/Config.js":"20","/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/components/Header.js":"21","/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/components/RightPanel.js":"22","/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/components/LeftPanel.js":"23","/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/components/WebSocket.js":"24","/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/components/Context.js":"25","/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/components/Reducer.js":"26","/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/components/Printer.js":"27","/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/components/Fan.js":"28","/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/components/Console.js":"29","/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/components/Gcode.js":"30","/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/components/Thermal.js":"31","/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/components/ThermalChart.js":"32","/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/assets/canvasjs.react.js":"33","/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/assets/canvasjs.min.js":"34"},{"size":254,"mtime":1634784784437,"results":"35","hashOfConfig":"36"},{"size":15755,"mtime":1655031026099,"results":"37","hashOfConfig":"36"},{"size":326,"mtime":1652269153430,"results":"38","hashOfConfig":"36"},{"size":304,"mtime":1655020580521,"results":"39","hashOfConfig":"36"},{"size":489,"mtime":1652174134256,"results":"40","hashOfConfig":"36"},{"size":3397,"mtime":1654675979032,"results":"41","hashOfConfig":"36"},{"size":3708,"mtime":1654675964351,"results":"42","hashOfConfig":"36"},{"size":1203,"mtime":1636010692165,"results":"43","hashOfConfig":"36"},{"size":321,"mtime":1650006739026,"results":"44","hashOfConfig":"36"},{"size":2739,"mtime":1654675998005,"results":"45","hashOfConfig":"36"},{"size":3520,"mtime":1655020534088,"results":"46","hashOfConfig":"36"},{"size":16132,"mtime":1654676010056,"results":"47","hashOfConfig":"36"},{"size":27356,"mtime":1715113881547,"results":"48","hashOfConfig":"36"},{"size":5535,"mtime":1654675989883,"results":"49","hashOfConfig":"36"},{"size":3087,"mtime":1652270747839,"results":"50","hashOfConfig":"36"},{"size":1720,"mtime":1548834460000,"results":"51","hashOfConfig":"36"},{"size":459239,"mtime":1549600508000,"results":"52","hashOfConfig":"36"},{"size":254,"mtime":1634784784437,"results":"53","hashOfConfig":"54"},{"size":15755,"mtime":1655031026099,"results":"55","hashOfConfig":"54"},{"size":3397,"mtime":1654675979032,"results":"56","hashOfConfig":"54"},{"size":3708,"mtime":1654675964351,"results":"57","hashOfConfig":"54"},{"size":489,"mtime":1652174134256,"results":"58","hashOfConfig":"54"},{"size":326,"mtime":1652269153430,"results":"59","hashOfConfig":"54"},{"size":304,"mtime":1655020580521,"results":"60","hashOfConfig":"54"},{"size":321,"mtime":1650006739026,"results":"61","hashOfConfig":"54"},{"size":1203,"mtime":1636010692165,"results":"62","hashOfConfig":"54"},{"size":27356,"mtime":1715113881547,"results":"63","hashOfConfig":"54"},{"size":2739,"mtime":1654675998005,"results":"64","hashOfConfig":"54"},{"size":3520,"mtime":1655020534088,"results":"65","hashOfConfig":"54"},{"size":16132,"mtime":1654676010056,"results":"66","hashOfConfig":"54"},{"size":5535,"mtime":1654675989883,"results":"67","hashOfConfig":"54"},{"size":3087,"mtime":1652270747839,"results":"68","hashOfConfig":"54"},{"size":1720,"mtime":1548834460000,"results":"69","hashOfConfig":"54"},{"size":459239,"mtime":1549600508000,"results":"70","hashOfConfig":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"1czmj1q",{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"73"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"73"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"73"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"73"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"73"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"73"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"73"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"73"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"73"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"73"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"73"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"73"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},"1ff1hon",{"filePath":"122","messages":"123","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"121"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"121"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"121"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"121"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"121"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"121"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"121"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"121"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"121"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"121"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"121"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"121"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zepingchen/Desktop/back_up/printer_web_interface/src/index.js",[],["154","155"],"/Users/zepingchen/Desktop/back_up/printer_web_interface/src/App.js",["156","157","158","159","160","161"],"import React from \"react\"\nimport Header from \"./components/Header\"\nimport LeftPanel from \"./components/LeftPanel\"\nimport RightPanel from \"./components/RightPanel\"\nimport Config from \"./components/Config\"\nimport {RightPanelContext} from \"./components/Context\"\nimport {LeftPanelContext} from \"./components/Context\"\nimport {conn, createNewConnection} from \"./components/WebSocket\"\nimport {initialState, reducer} from \"./components/Reducer\"\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\"\nimport './App.css';\n\nconst localIpUrl = require('local-ip-url');\nconst ipAdress = localIpUrl('public', 'ipv4')\n\nconst WebSocketContext = React.createContext(conn)\n\n// resp = {\"action\": \"UPDATE_PRINTER_INFO\",\n//                \"payload\": {\n//                    \"extruder\": {\n//                    \"temp\": extruder_temp,\n//                    \"set_temp\": extruder_set_temp,\n//                    \"is_powered\": False\n//                    },\n//                    \"bed\": {\n//                    \"temp\": bed_temp,\n//                    \"set_temp\": bed_set_temp,\n//                    \"is_powered\": False\n//                    },\n//                    \"pi\": {\n//                    \"temp\": pi_temp\n//                    },\n//                    \"fan\": {\n//                    \"power\": fan_power,\n//                    \"is_powered\": False\n//                    },\n//                    \"toolhead\": {\n//                    \"position\": position,\n//                    \"max_accel\": max_accel,\n//                    \"max_decel\": max_decel,\n//                    \"move_speed\": move_speed,\n//                    \"move_state\": move_state,\n//                    \"home_state\": home_state\n//                    },\n//                    \"task\": {\n//                    \"name\": \"ongoing_task.name\",\n//                    \"time_spent\": \"ongoing_task.time_spent\",\n//                    \"time_left\": \"ongoing_task.time_left\",\n//                    \"state\": \"ongoing_task.state\"\n//                    }\n//                 }\n//                }\n\nclass App extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      isHomeSelected: true,\n      isConnected: false,\n      isPrinting: false,\n      extruder: {\n        temp: 0,\n        setTemp: 0,\n        isPowered: false\n      },\n      bed: {\n        temp: 0,\n        setTemp: 0,\n        isPowered: false\n      },\n      pi: {\n        temp: 0,\n      },\n      fan: {\n        power: 0,\n        isPowered: false\n      },\n      toolhead: {\n        position: [0, 0, 0, 0],\n        maxAccel: 0,\n        maxDecel: 0,\n        moveSpeed: 0,\n        moveState: [false, false, false, false],\n        homeState: [false, false, false, false]\n\n      },\n      taskQueue: [],\n      message: '',\n    }\n    // this.state = React.useReducer(reducer, initialState)\n    this.setIsHomeSelected = this.setIsHomeSelected.bind(this)\n    this.setIsConnected = this.setIsConnected.bind(this)\n    this.setPrinterInfo = this.setPrinterInfo.bind(this)\n    this.connectWebSocket = this.connectWebSocket.bind(this);\n  }\n\n  setIsHomeSelected(newSelection) {\n    this.setState({...this.state, isHomeSelected: newSelection});\n  }\n\n  setIsConnected(newConnectionState) {\n    this.setState({...this.state, isConnected: newConnectionState});\n  }\n\n  setPrinterInfo(newPrinterState) {\n    this.setState({ ...this.state,\n                    isPrinting: newPrinterState.isPrinting,\n                    extruder: newPrinterState.extruder,\n                    bed: newPrinterState.bed,\n                    pi: newPrinterState.pi,\n                    fan: newPrinterState.fan,\n                    toolhead: newPrinterState.toolhead,\n                    taskQueue: Array.from(newPrinterState.taskQueue),\n                    message: newPrinterState.message\n                  });\n  }\n\n  connectWebSocket() {\n\n      if(conn === undefined || (conn && conn.readyState === 3)) {\n        createNewConnection();\n      }\n\n      conn.onopen = () => {\n        console.log('WebSocket Connected');\n        this.setIsConnected(true);\n        const jsonPackage = {\n          type: \"get_printer_info\",\n          payload: \"\"\n        }\n        this.interval = setInterval(() => {\n          if(conn && conn.readyState === 1) {\n            conn.send(JSON.stringify(jsonPackage));\n          }\n        }, 500);\n\n      }\n\n      conn.onmessage = (message) => {\n        // console.log(message.data);\n        const responseObJ = JSON.parse(message.data);\n        console.log(responseObJ.payload.message);\n        switch (responseObJ.action) {\n          case \"UPDATE_PRINTER_INFO\":\n            this.setPrinterInfo(responseObJ.payload);\n          default:\n            break\n        }\n      }\n\n      conn.onclose = () => {\n        console.log(\"No connection\");\n        this.setIsConnected(false);\n        clearInterval(this.interval);\n        setTimeout(this.connectWebSocket, 2000);\n      }\n\n  }\n\n  componentWillMount() {\n  }\n\n  componentDidMount() {\n    this.connectWebSocket();\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Header isHomeSelected={this.state.isHomeSelected} setIsHomeSelected={this.setIsHomeSelected}/>\n          {this.state.isHomeSelected? (\n            <div className=\"app-body\">\n              <LeftPanelContext.Provider value={{extruder: this.state.extruder, bed: this.state.bed, pi: this.state.pi, fan: this.state.fan}}>\n                <LeftPanel />\n              </LeftPanelContext.Provider>\n              <RightPanelContext.Provider value={{toolhead: this.state.toolhead, taskQueue: this.state.taskQueue, isPrinting: this.state.isPrinting, message: this.state.message}}>\n                <RightPanel />\n              </RightPanelContext.Provider>\n            </div>\n          )\n          :\n          (\n            <Config />\n          )}\n      </div>\n    );\n  }\n\n}\n\n\n// class App extends React.Component {\n//\n//   constructor() {\n//     super()\n//     this.state = {\n//       isHomeSelected: true,\n//       isConnected: false,\n//       isPrinting: false,\n//       extruder: {\n//         temp: 0,\n//         setTemp: 0,\n//         isPowered: false\n//       },\n//       bed: {\n//         temp: 0,\n//         setTemp: 0,\n//         isPowered: false\n//       },\n//       pi: {\n//         temp: 0,\n//       },\n//       fan: {\n//         power: 0,\n//         isPowered: false\n//       },\n//       toolhead: {\n//         position: [0, 0, 0, 0],\n//         maxAccel: 1000,\n//         maxDecel: 1000,\n//         moveSpeed: 0,\n//         moveState: [false, false, false, false],\n//         homeState: [false, false, false, false]\n//\n//       },\n//       taskQueue: [],\n//     }\n//     // this.state = React.useReducer(reducer, initialState)\n//     this.setIsHomeSelected = this.setIsHomeSelected.bind(this)\n//     this.setIsConnected = this.setIsConnected.bind(this)\n//     this.setPrinterInfo = this.setPrinterInfo.bind(this)\n//   }\n//\n//   setIsHomeSelected(newSelection) {\n//     this.setState({...this.state, isHomeSelected: newSelection});\n//   }\n//\n//   setIsConnected(newConnectionState) {\n//     this.setState({...this.state, isConnected: newConnectionState});\n//   }\n//\n//   setPrinterInfo(newPrinterState) {\n//     this.setState({ ...this.state,\n//                     isPrinting: newPrinterState.isPrinting,\n//                     extruder: newPrinterState.extruder,\n//                     bed: newPrinterState.bed,\n//                     pi: newPrinterState.pi,\n//                     fan: newPrinterState.fan,\n//                     toolhead: newPrinterState.toolhead,\n//                     taskQueue: Array.from(newPrinterState.taskQueue) });\n//   }\n//\n//   componentWillMount() {\n//\n//     conn.onopen = () => {\n//       console.log('WebSocket Connected');\n//       this.setIsConnected(true);\n//       function sendNumber() {\n//         if (conn.readyState === conn.OPEN) {\n//             var number = Math.round(Math.random() * 0xFFFFFF);\n//             conn.send(number.toString());\n//             setTimeout(sendNumber, 1000);\n//         }\n//       }\n//       function getPrinterInfo() {\n//         const jsonPackage = {\n//           type: \"get_printer_info\",\n//           payload: \"\"\n//         }\n//         setInterval(() => {\n//           conn.send(JSON.stringify(jsonPackage))\n//         }, 800)\n//       }\n//       getPrinterInfo();\n//       // sendNumber()\n//     };\n//\n//     conn.onmessage = (message) => {\n//       console.log(message.data);\n//       const responseObJ = JSON.parse(message.data);\n//       switch (responseObJ.action) {\n//         case \"CONNECT\":\n//           this.setIsConnected(true)\n//           break\n//         case \"DISCONNECT\":\n//           this.setIsConnected(false)\n//           break\n//         case \"UPDATE_PRINTER_INFO\":\n//           this.setPrinterInfo(responseObJ.payload)\n//         default:\n//           break\n//       }\n//     };\n//\n//     conn.onclose = () => {\n//       console.log(\"Closing connection\")\n//       this.setIsConnected(false)\n//       setInterval(() => {\n//         conn = new W3CWebSocket('ws://127.0.0.1:8000');\n//       }, 3000)\n//     }\n//   }\n//\n//   componentDidMount() {\n//   }\n//\n//   render() {\n//     return (\n//       <div className=\"app\">\n//         <Header isHomeSelected={this.state.isHomeSelected} setIsHomeSelected={this.setIsHomeSelected}/>\n//           {this.state.isHomeSelected? (\n//             <div className=\"app-body\">\n//               <LeftPanelContext.Provider value={{extruder: this.state.extruder, bed: this.state.bed, pi: this.state.pi, fan: this.state.fan}}>\n//                 <LeftPanel />\n//               </LeftPanelContext.Provider>\n//               <RightPanelContext.Provider value={{toolhead: this.state.toolhead, taskQueue: this.state.taskQueue, isPrinting: this.state.isPrinting}}>\n//                 <RightPanel />\n//               </RightPanelContext.Provider>\n//             </div>\n//           )\n//           :\n//           (\n//             <Config />\n//           )}\n//       </div>\n//     );\n//   }\n//\n// }\n\n// class App extends React.Component {\n//\n//   constructor() {\n//     super()\n//\n//     this.state = {\n//       isHomeSelected: true,\n//       isConnected: false,\n//       isPrinting: false,\n//       isHeating: false,\n//       isUploading: false,\n//       isMoving: {\n//         x: false,\n//         y: false,\n//         z: false,\n//         e: false,\n//       },\n//       position: {\n//         x: 0,\n//         y: 0,\n//         z: 0,\n//         e: 0\n//       },\n//       temperature: {\n//         extruder: 0,\n//         bed: 0,\n//         pi: 0\n//       },\n//       gcodeFileList: [\"-\", \"-\", \"-\", \"-\"]\n//     }\n//     // this.state = React.useReducer(reducer, initialState)\n//     this.setIsHomeSelected = this.setIsHomeSelected.bind(this)\n//     this.setIsConnected = this.setIsConnected.bind(this)\n//     this.setIsPrinting = this.setIsPrinting.bind(this)\n//     this.setIsHeating = this.setIsHeating.bind(this)\n//     this.setIsUploading = this.setIsUploading.bind(this)\n//     this.setIsMoving = this.setIsMoving.bind(this)\n//     this.setPosition = this.setPosition.bind(this)\n//     this.setTemperature = this.setTemperature.bind(this)\n//     this.setGcodeFileList = this.setGcodeFileList.bind(this)\n//   }\n//\n//   setTemperature(newTemperature) {\n//     this.setState({...this.state, temperature: newTemperature});\n//   }\n//\n//   setPosition(newPosition) {\n//     this.setState({...this.state, position: newPosition});\n//   }\n//\n//   setGcodeFileList(newFileList) {\n//     this.setState({...this.state, gcodeFileList: Array.from(newFileList)});\n//   }\n//\n//   setIsHomeSelected(newSelection) {\n//     this.setState({...this.state, isHomeSelected: newSelection});\n//   }\n//\n//   setIsConnected(newConnectionState) {\n//     this.setState({...this.state, isConnected: newConnectionState});\n//   }\n//\n//   setIsPrinting(newPrintingState) {\n//     this.setState({...this.state, isPrinting: newPrintingState});\n//   }\n//\n//   setIsHeating(newHeatingState) {\n//     this.setState({...this.state, isHeating: newHeatingState});\n//   }\n//\n//   setIsUploading(newUploadingState) {\n//     this.setState({...this.state, isUploading: newUploadingState});\n//   }\n//\n//   setIsMoving(newMovingState) {\n//     this.setState({...this.state, isMoving: newMovingState});\n//   }\n//\n//   componentWillMount() {\n//\n//     conn.onopen = () => {\n//       console.log('WebSocket Connected');\n//       this.setIsConnected(true)\n//       function sendNumber() {\n//         if (conn.readyState === conn.OPEN) {\n//             var number = Math.round(Math.random() * 0xFFFFFF);\n//             conn.send(number.toString());\n//             setTimeout(sendNumber, 1000);\n//         }\n//       }\n//       function getPrinterInfo() {\n//         const jsonPackage = {\n//           type: \"get_printer_info\",\n//           payload: \"\"\n//         }\n//         setInterval(() => {\n//           conn.send(JSON.stringify(jsonPackage))\n//         },1000)\n//       }\n//       getPrinterInfo()\n//       // sendNumber()\n//     };\n//\n//     conn.onmessage = (message) => {\n//       const data = JSON.parse(message.data);\n//       switch (data.action) {\n//         case \"CONNECT\":\n//           this.setIsConnected(true)\n//           break\n//         case \"DISCONNECT\":\n//           this.setIsConnected(false)\n//           break\n//         case \"START_PRINT\":\n//           this.setIsPrinting(true)\n//           break\n//         case \"RESUME_PRINT\":\n//           this.setIsPrinting(true)\n//           break\n//         case \"STOP_PRINT\":\n//           this.setIsPrinting(false)\n//           break\n//         case \"CANCEL_PRINT\":\n//           this.setIsPrinting(false)\n//           break\n//         case \"START_HEATING\":\n//           this.setIsHeating(true)\n//           break\n//         case \"STOP_HEATING\":\n//           this.setIsHeating(false)\n//           break\n//         case \"UPDATE_TEMPERATURE\":\n//           this.setTemperature(data.temperature)\n//           break\n//         case \"UPDATE_POSITION\":\n//           this.setPosition(data.position)\n//           break\n//         case \"UPDATE_FILE_LIST\":\n//           this.setGcodeFileList(data.gcodeFileList)\n//           break\n//         case \"UPDATE_PRINTER_INFO\":\n//           console.log(data.payload)\n//           console.log(\"from App.js\")\n//         default:\n//           break\n//       }\n//       console.log(message)\n//     };\n//\n//     conn.onclose = () => {\n//       console.log(\"Closing connection\")\n//       this.setIsConnected(false)\n//     }\n//   }\n//\n//   componentDidMount() {\n//   }\n//\n  // render() {\n  //   return (\n  //     <div className=\"app\">\n  //       <Header isHomeSelected={this.state.isHomeSelected} setIsHomeSelected={this.setIsHomeSelected}/>\n  //         {this.state.isHomeSelected? (\n  //           <div className=\"app-body\">\n  //             <LeftPanelContext.Provider value={{temperature: this.state.temperature, gcodeFileList: this.state.gcodeFileList, isHeating: this.state.isHeating, isUploading: this.state.isUploading}}>\n  //               <LeftPanel />\n  //             </LeftPanelContext.Provider>\n  //             <RightPanelContext.Provider value={{position: this.state.position, isPrinting: this.state.isPrinting}}>\n  //               <RightPanel />\n  //             </RightPanelContext.Provider>\n  //           </div>\n  //         )\n  //         :\n  //         (\n  //           <Config />\n  //         )}\n  //     </div>\n  //   );\n  // }\n// }\n\n// <LeftPanelContext.Provider value={{temperature: this.state.temperature, gcodeFileList: this.state.gcodeFileList, isHeating: this.state.isHeating, isUploading: this.state.isUploading}}>\n//   <LeftPanel />\n// </LeftPanelContext.Provider>\n// <RightPanelContext.Provider value={{position: this.state.position, isPrinting: this.state.isPrinting}}>\n//   <RightPanel />\n// </RightPanelContext.Provider>\n\nexport default App\n","/Users/zepingchen/Desktop/back_up/printer_web_interface/src/components/LeftPanel.js",["162"],"import React from \"react\"\nimport Thermal from \"./Thermal\"\nimport Fan from \"./Fan\"\nimport Gcode from \"./Gcode\"\nimport Console from \"./Console\"\nimport \"./LeftPanel.css\"\n\nfunction LeftPanel() {\n  return (\n    <div className=\"left-panel\">\n      <Thermal />\n      <Gcode />\n      <Fan />\n    </div>\n  )\n}\n\nexport default LeftPanel\n","/Users/zepingchen/Desktop/back_up/printer_web_interface/src/components/WebSocket.js",[],"/Users/zepingchen/Desktop/back_up/printer_web_interface/src/components/RightPanel.js",["163","164","165"],"import React from \"react\"\nimport Printer from \"./Printer\"\nimport Fan from \"./Fan\"\nimport Gcode from \"./Gcode\"\nimport Console from \"./Console\"\nimport \"./RightPanel.css\"\n\nfunction RightPanel() {\n\n  return (\n    <div className=\"right-panel\">\n      <Printer />\n      <Console />\n    </div>\n  )\n}\n\nexport default React.memo(RightPanel)\n\n\nconst themes = {\n  light: {\n    foreground: \"#000000\",\n    background: \"#eeeeee\"\n  },\n  dark: {\n    foreground: \"#ffffff\",\n    background: \"#222222\"\n  }\n};\n","/Users/zepingchen/Desktop/back_up/printer_web_interface/src/components/Config.js",["166","167","168","169","170"],"import React from \"react\"\nimport axios from 'axios'\nimport \"./Config.css\"\n\nimport TextField from '@mui/material/TextField'\nimport RefreshRoundedIcon from '@mui/icons-material/RefreshRounded'\nimport { Button } from '@mui/material'\nimport { IconButton } from '@mui/material'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\n\nimport {conn} from \"./WebSocket\"\n\nfunction ConfigHeader(props) {\n  const handleRefreshConfig = () => {\n    console.log(\"Refresh Config\")\n  }\n  return (\n    <div className=\"config-header\">\n      <h3>*config.cfg*</h3>\n      <div className=\"config-header-option\">\n        <IconButton aria-label=\"refresh\" size=\"large\" color=\"primary\" onClick={handleRefreshConfig}>\n           <RefreshRoundedIcon fontSize=\"inherit\" />\n        </IconButton>\n      </div>\n    </div>\n  )\n}\n\nfunction Config() {\n\n  const [printerConfig, setPrinterConfig] = React.useState('')\n  const [hasPrinterConfig, setHasPrinterConfig] = React.useState(false)\n  const getConfigFileURL = \"http://127.0.0.1:5000/get_config_file\"\n  const updateConfigFileURL = \"http://127.0.0.1:5000/update_config_file\"\n\n  const buttonStyle = {\n    width: \"100px\",\n    marginRight: \"10px\"\n  }\n\n  const getConfigFileRequest = async () => {\n    await axios.get(getConfigFileURL)\n     .then(response => response.data)\n     .then(result => {\n       if(result.status) {\n         setHasPrinterConfig(true)\n         setPrinterConfig(result.payload)\n       } else {\n         setHasPrinterConfig(false)\n         alert(\"Failed to get config file\")\n       }\n     }\n   )\n  }\n\n  const updateConfigFileRequest = async () => {\n\n    const formData = new FormData()\n    formData.append('action', \"UPDATE_CONFIG_FILE\")\n    formData.append('payload', printerConfig)\n\n    await axios.post(updateConfigFileURL, formData)\n    .then(response => response.data)\n    .then(result => {\n      if(result.status) {\n        alert(\"Modified Successfully\")\n        getConfigFileRequest()\n      } else {\n        alert(\"Failed to update config file\")\n      }\n    })\n    .catch(error => {\n      console.log(error)\n    })\n  }\n\n  // const handleRefreshConfig = () => {\n  //   getConfigFileRequest()\n  //   console.log(\"Refresh Config\")\n  // }\n\n  React.useEffect(() => {\n    getConfigFileRequest()\n  }, [])\n\n  const handleConfigFileChange = (event) => {\n    setPrinterConfig(event.target.value);\n  }\n\n  const handleApplyChange = () => {\n    updateConfigFileRequest()\n    setTimeout(() => {\n      console.log(\"Restart program after config update\");\n      const jsonPackage = {\n        type: \"program_restart\",\n        payload: \"\"\n      }\n      conn.send(JSON.stringify(jsonPackage));\n    }, 1000);\n  }\n\n  const handleCancelChange = () => {\n    console.log(\"Cancel change\")\n  }\n\n  return (\n    <div className=\"config\">\n      <ConfigHeader />\n      <div className=\"config-content\">\n        <TextField\n          multiline\n          fullWidth=\"true\"\n          rows=\"20\"\n          value={printerConfig}\n          onChange={handleConfigFileChange}\n        />\n      </div>\n      <div className=\"config-bottom\">\n        <Button disabled={!hasPrinterConfig} variant=\"contained\" color=\"primary\" size=\"large\" style={buttonStyle} onClick={handleApplyChange}>Save</Button>\n      </div>\n    </div>\n  )\n}\n\nexport default Config\n","/Users/zepingchen/Desktop/back_up/printer_web_interface/src/components/Header.js",["171"],"import React from \"react\"\nimport {conn} from \"./WebSocket\"\nimport { IconButton } from '@mui/material'\nimport Badge from '@mui/material/Badge'\nimport HomeRoundedIcon from '@mui/icons-material/Home'\nimport SettingsIcon from '@mui/icons-material/Settings'\nimport NotificationsNoneIcon from '@mui/icons-material/NotificationsNone'\nimport ReplayCircleFilledIcon from '@mui/icons-material/ReplayCircleFilled'\nimport ReportGmailerrorredIcon from '@mui/icons-material/ReportGmailerrorred'\nimport StopCircleIcon from '@mui/icons-material/StopCircle'\nimport Tooltip from '@mui/material/Tooltip'\nimport \"./Header.css\"\n\nimport { red, green, pink, grey }  from '@mui/material/colors'\n\nfunction Header(props) {\n\n  const handleHomePageSelected = () => {\n    props.setIsHomeSelected(true)\n  }\n\n  const handleSettingPageSelected = () => {\n    props.setIsHomeSelected(false)\n  }\n\n  const handleSystemReset = () => {\n    const jsonPackage = {\n      type: \"system_reset\",\n      payload: \"\"\n    }\n    conn.send(JSON.stringify(jsonPackage))\n  }\n\n  const handleEmergencyStop = () => {\n    const jsonPackage = {\n      type: \"emergency_stop\",\n      payload: \"\"\n    }\n    conn.send(JSON.stringify(jsonPackage))\n  }\n\n  const handleProgramRestart = () => {\n    const jsonPackage = {\n      type: \"program_restart\",\n      payload: \"\"\n    }\n    conn.send(JSON.stringify(jsonPackage))\n  }\n\n  return (\n    <div className=\"header\">\n      <div className=\"header-left\">\n        <h2 style={{color:\"green\"}}>Green Eco</h2>\n      </div>\n\n      <div className=\"header-middle\">\n        <div className=\"header-option\">\n          <IconButton aria-label=\"home\" size=\"small\" style={{width:\"80px\"}} onClick={handleHomePageSelected}>\n            <div className=\"header-option-content\">\n              <HomeRoundedIcon fontSize=\"large\" color=\"primary\"/>\n              Home\n            </div>\n          </IconButton>\n        </div>\n        <div className=\"header-option\">\n          <IconButton aria-label=\"setting\" size=\"small\" style={{width:\"80px\"}} onClick={handleSettingPageSelected}>\n            <div className=\"header-option-content\">\n              <SettingsIcon fontSize=\"large\" color=\"primary\"/>\n              Config\n            </div>\n          </IconButton>\n        </div>\n      </div>\n\n      <div className=\"header-right\">\n        <div className=\"header-right-button\" >\n          <Tooltip title=\"System Reset\">\n            <IconButton aria-label=\"system-reset\" size=\"large\" sx={{ color: green[800] }} onClick={handleSystemReset}>\n               <ReplayCircleFilledIcon fontSize=\"inherit\" />\n            </IconButton>\n          </Tooltip>\n        </div>\n        <div className=\"header-right-button\" >\n          <Tooltip title=\"Emergency Stop\">\n            <IconButton aria-label=\"emergency-stop\" size=\"large\" sx={{ color: red[800] }} onClick={handleEmergencyStop}>\n               <StopCircleIcon fontSize=\"inherit\" />\n            </IconButton>\n          </Tooltip>\n        </div>\n        <div className=\"header-right-button\" >\n          <Tooltip title=\"Program Restart\">\n            <IconButton aria-label=\"program-restart\" size=\"large\" sx={{ color: red[800] }} onClick={handleProgramRestart}>\n              <ReportGmailerrorredIcon fontSize=\"inherit\" />\n            </IconButton>\n          </Tooltip>\n        </div>\n        <div className=\"header-right-button\" >\n          <Tooltip title=\"Notification\">\n            <IconButton aria-label=\"notification\" size=\"large\" sx={{ color: grey[700] }}>\n              <Badge color=\"primary\" badgeContent={1}>\n                <NotificationsNoneIcon fontSize=\"inherit\" />\n              </Badge>\n            </IconButton>\n          </Tooltip>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Header\n","/Users/zepingchen/Desktop/back_up/printer_web_interface/src/components/Reducer.js",["172","173","174","175","176","177","178","179","180","181","182"],"import React from \"react\"\n\nconst initialState = {\n  isConnected: false,\n  isPrinting: false,\n  isHeating: false,\n  position: {\n    x: 0,\n    y: 0,\n    z: 0,\n    e: 0\n  },\n  temperature: {\n    extruder: 0,\n    bed: 0,\n    pi: 0\n  },\n  gcodeFileList: []\n}\n\nconst reducer = (state=initialState, action) => {\n  switch (action.type) {\n    case \"CONNECT\":\n      return {...state, isConnected: true}\n      break\n    case \"DISCONNECT\":\n      return {...state, isConnected: false}\n      break\n    case \"START_PRINTING\":\n      return {...state, isPrinting: true}\n      break\n    case \"STOP_PRINTING\":\n      return {...state, isPrinting: false}\n      break\n    case \"START_HEATING\":\n      return {...state, isHeating: true}\n      break\n    case \"STOP_HEATING\":\n      return {...state, isHeating: false}\n      break\n    case \"UPDATE_POSITION\":\n      return {...state, position: action.payload.position}\n      break\n    case \"UPDATE_TEMPERATURE\":\n      return {...state, temperature: action.payload.temperature}\n      break\n    case \"UPDATE_FILE_LIST\":\n      return {...state, gcodeFileList: action.payload.gcodeFileList}\n      break\n    default:\n      return state\n      break\n  }\n}\n\nexport {initialState, reducer}\n","/Users/zepingchen/Desktop/back_up/printer_web_interface/src/components/Context.js",[],"/Users/zepingchen/Desktop/back_up/printer_web_interface/src/components/Fan.js",["183"],"import React from \"react\"\nimport {Slider} from '@mui/material'\nimport Box from '@mui/material/Box'\nimport Switch from '@mui/material/Switch'\nimport PowerIcon from '@mui/icons-material/Power'\nimport {conn} from \"./WebSocket\"\nimport \"./Fan.css\"\n\nimport {LeftPanelContext} from \"./Context\"\n\n// function FanHeader(props) {\n//\n//   return (\n//     <div className=\"fan-header\">\n//       <div className=\"fan-header-icon\">\n//         <PowerIcon color=\"primary\"/>\n//       </div>\n//       <h3 style={{paddingRight: \"70%\"}}>Fan Control</h3>\n//       <Switch\n//         edge=\"end\"\n//         onChange={props.toggleFanState}\n//         checked={props.fanChecked}\n//       />\n//     </div>\n//   )\n// }\n\n// function getJsonPackageFan(value) {\n//   return {\n//     type: \"gcode_command\",\n//     payload: `M106 S${value}`\n//   }\n// }\n\nfunction getJsonPackageFan(value) {\n  return {\n    type: \"set_fan_power\",\n    payload: value\n  }\n}\n\nfunction Fan() {\n\n  const [fanPower, setFanPower] = React.useState(0)\n  const [fanChecked, setFanChecked] = React.useState(false)\n\n  const contextObj = React.useContext(LeftPanelContext)\n\n  const handlePowerChange = (event, newPower) => {\n    setFanPower(newPower)\n  }\n\n  const handlePowerChangeCommitted = (event, newPower) => {\n    if(newPower > 0) {\n      setFanChecked(true)\n      const jsonPackage = getJsonPackageFan(Math.round(newPower / 100 * 255))\n      conn.send(JSON.stringify(jsonPackage))\n    }\n    else {\n      setFanChecked(false)\n      const jsonPackage = getJsonPackageFan(0)\n      conn.send(JSON.stringify(jsonPackage))\n    }\n  }\n\n  const toggleFanState = () => {\n    if(fanChecked) {\n      setFanChecked(false)\n      setFanPower(0)\n      const jsonPackage = getJsonPackageFan(0)\n      conn.send(JSON.stringify(jsonPackage))\n    }\n    else {\n      setFanChecked(true)\n      setFanPower(100)\n      const jsonPackage = getJsonPackageFan(255)\n      conn.send(JSON.stringify(jsonPackage))\n    }\n  }\n\n  return (\n    <div className=\"fan\">\n      <div className=\"fan-header\">\n        <div className=\"fan-header-icon\">\n          <PowerIcon color=\"primary\"/>\n        </div>\n        <h3 style={{paddingRight: \"81%\"}}>Fan</h3>\n        <Switch\n          edge=\"end\"\n          onChange={toggleFanState}\n          checked={fanChecked}\n        />\n      </div>\n      <div className=\"fan-slider\">\n        <h3 style={{paddingRight:\"15px\"}}>Power:</h3>\n        <Box width={600}>\n          <Slider\n            defaultValue={0}\n            aria-label=\"Small\"\n            onChange={handlePowerChange}\n            onChangeCommitted={handlePowerChangeCommitted}\n            valueLabelDisplay=\"auto\"\n            max={100}\n            value={fanPower}\n          />\n        </Box>\n      </div>\n    </div>\n  )\n}\n\nexport default Fan\n","/Users/zepingchen/Desktop/back_up/printer_web_interface/src/components/Console.js",["184","185","186","187"],"import React from \"react\"\nimport axios from 'axios'\nimport {conn} from \"./WebSocket\"\nimport \"./Console.css\"\n\nimport MessageIcon from '@mui/icons-material/Message'\nimport HelpIcon from '@mui/icons-material/Help'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport SendIcon from '@mui/icons-material/Send'\nimport Dialog from '@mui/material/Dialog'\nimport Tooltip from '@mui/material/Tooltip'\nimport { InputBase } from '@mui/material'\nimport { TextField } from '@mui/material'\nimport { IconButton } from '@mui/material'\nimport { Button } from '@mui/material'\n\nimport {RightPanelContext} from \"./Context\"\n\n// var globalContent = \"20:11:11: This is a test\\n20:11:11: This is a test\\n20:11:11: This is a test\\n20:11:11: This is a test\\n20:11:11: This is a test\\n20:11:11: This is a test\\n20:11:11: This is a test\\n20:11:11: This is a test\\n\"\nvar globalContent = ''\n\nfunction Console() {\n\n  const [commandToSent, setCommandToSent] = React.useState('');\n  const [contentToDisplay, setContentToDisplay] = React.useState('');\n  const inputElement = React.useRef(null);\n\n  const contextObj = React.useContext(RightPanelContext);\n\n  const scrollToBottom = () => {\n    inputElement.current?.scrollIntoView({ behavior: \"smooth\" })\n  }\n\n  const formatMessage = (message) => {\n    var date = new Date();\n    var time = date.toLocaleTimeString();\n    // var time = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n    message = time + ' ' + message + '\\n';\n    return message\n  }\n\n  React.useEffect(() => {\n    if(contextObj.message) {\n      var message = formatMessage(contextObj.message);\n      globalContent = globalContent.concat(message);\n      setContentToDisplay(globalContent);\n      // scrollToBottom();\n    }\n  }, [contextObj.message]);\n\n  const handleCommandToSentChange = (event) => {\n    setCommandToSent(event.target.value);\n  }\n\n  const handleSendCommand = () => {\n    const jsonPackage = {\n      type: \"gcode_command\",\n      payload: String(commandToSent)\n    }\n    conn.send(JSON.stringify(jsonPackage));\n    var message = formatMessage(commandToSent);\n    globalContent = globalContent.concat(message);\n    setContentToDisplay(globalContent);\n  }\n\n  return (\n    <div className=\"console\">\n      <div className=\"console-header\">\n        <div className=\"console-header-icon\">\n          <MessageIcon color=\"primary\"/>\n        </div>\n        <h3>Console</h3>\n        <IconButton aria-label=\"console-info\" size=\"large\" color=\"primary\" onClick=''>\n           <HelpIcon/>\n        </IconButton>\n        <IconButton aria-label=\"console-dropdown\" size=\"large\" color=\"primary\" onClick=''>\n           <ExpandMoreIcon/>\n        </IconButton>\n      </div>\n      <div className=\"console-panel\">\n        <InputBase\n        minRows=\"10\"\n        maxRows=\"10\"\n        multiline=\"true\"\n        fullWidth\n        value={contentToDisplay}\n        inputRef={inputElement}\n        inputProps={{style: {fontSize: 20, color: \"grey\", fontFamily: \"Times\", fontStyle: \"Bold\"}}}\n        />\n      </div>\n      <div className=\"console-bottom\">\n        <TextField\n          id=\"command-to-send\"\n          size=\"small\"\n          placeholder=\"G28 W\"\n          fullWidth\n          value={commandToSent}\n          onChange={handleCommandToSentChange}\n        />\n        <Tooltip title=\"Send\">\n          <IconButton aria-label=\"console-send\" size=\"large\" color=\"primary\" onClick={handleSendCommand}>\n             <SendIcon/>\n          </IconButton>\n        </Tooltip>\n      </div>\n    </div>\n  )\n}\n\nexport default Console\n","/Users/zepingchen/Desktop/back_up/printer_web_interface/src/components/Gcode.js",["188","189","190","191","192","193","194","195"],"import React from \"react\"\nimport axios from 'axios'\nimport {conn} from \"./WebSocket\"\nimport { Button } from '@mui/material'\nimport { IconButton } from '@mui/material'\nimport DescriptionRoundedIcon from '@mui/icons-material/DescriptionRounded'\nimport InsertDriveFileRoundedIcon from '@mui/icons-material/InsertDriveFileRounded'\nimport AddRoundedIcon from '@mui/icons-material/AddRounded'\nimport RefreshRoundedIcon from '@mui/icons-material/RefreshRounded'\nimport PrintIcon from '@mui/icons-material/Print'\nimport EditIcon from '@mui/icons-material/Edit'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport \"./Gcode.css\"\n\nimport List from '@mui/material/List'\nimport ListItemButton from '@mui/material/ListItemButton'\nimport Menu from '@mui/material/Menu'\nimport MenuItem from '@mui/material/MenuItem'\n\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport TextField from '@mui/material/TextField'\nimport Tooltip from '@mui/material/Tooltip'\n\nimport { FixedSizeList } from \"react-window\"\nimport AutoSizer from \"react-virtualized-auto-sizer\"\n\nimport {LeftPanelContext} from \"./Context\"\n\n// name: 'tower_test.gcode',\n// lastModified: 1626257452965,\n// lastModifiedDate: Wed Jul 14 2021 18:10:52 GMT+0800 (China Standard Time),\n// webkitRelativePath: '',\n// size: 2283253\n\nfunction GcodeHeader(props) {\n\n  const [fileSelected, setFileSelected] = React.useState()\n  const [openUploadDialog, setOpenUploadDialog] = React.useState(false)\n  const [uploadProgress, setUploadProgress] = React.useState(0)\n  const [isSelected, setIsSelected] = React.useState(false)\n\n  // const handleSelectedFile = (event) => {\n  //   setFileSelected(event.target.files[0])\n  //   setOpenUploadDialog(true)\n  //   setIsSelected(true)\n  //   console.log(event.target.files[0])\n  //   var reader = new FileReader();\n  //   // var rawData = new ArrayBuffer();\n  //   let file = event.target.files[0]\n  //   conn.binaryType = \"arraybuffer\";\n  //\n  //   reader.onerror = () => {\n  //     console.log(\"Error while loading file\")\n  //   }\n  //   reader.onload = async function(event) {\n  //     var startTime, endTime\n  //     startTime = new Date()\n  //     var rawData = event.target.result\n  //     const dataLength = rawData.length\n  //     const chunkSize = 4096\n  //     const numOfChunks = Math.ceil(dataLength / chunkSize)\n  //     //before sending file\n  //     const jsonPackageStartUpload = {\n  //       type: \"gcode_file_upload_start\",\n  //       filename: file.name,\n  //       length: numOfChunks,\n  //       payload: \"\"\n  //     }\n  //     conn.send(JSON.stringify(jsonPackageStartUpload))\n  //\n  //     for(let i = 0; i < numOfChunks; i++) {\n  //       var chunkData\n  //       if(i === numOfChunks) {\n  //         chunkData = rawData.slice(i * chunkSize)\n  //       } else {\n  //         chunkData = rawData.slice(i * chunkSize, i * chunkSize + chunkSize)\n  //       }\n  //       //on sending file\n  //       const jsonPackageUploading = {\n  //         type: \"gcode_file_upload\",\n  //         seq: i,\n  //         filename: file.name,\n  //         payload: chunkData,\n  //       }\n  //       conn.send(JSON.stringify(jsonPackageUploading))\n  //     }\n  //     //after sending file\n  //     const jsonPackageUploadFinish = {\n  //       type: \"gcode_file_upload_finish\",\n  //       filename: file.name,\n  //       payload: \"\"\n  //     }\n  //     conn.send(JSON.stringify(jsonPackageUploadFinish))\n  //\n  //     setOpenUploadDialog(false)\n  //     endTime = new Date()\n  //     console.log(endTime.getTime() - startTime.getTime())\n  //   }\n  //   reader.readAsBinaryString(event.target.files[0])\n  //\n  // }\n  const uploadGcodeFileURL = \"http://127.0.0.1:5000/upload_gcode_file\"\n\n  const uploadGcodeFileRequest = async (filename, payload) => {\n    const formData = new FormData()\n    formData.append('action', \"UPLOAD_GCODE_FILE\")\n    formData.append('filename', filename)\n    formData.append('payload', payload)\n    await axios.post(uploadGcodeFileURL, formData)\n    .then(response => response.data)\n    .then(result => {\n      if(result.status) {\n        setOpenUploadDialog(false)\n        props.refreshFileList()\n      } else {\n        alert(\"Failed to upload file\")\n      }\n    })\n  }\n\n  const handleSelectedFile = (event) => {\n    setFileSelected(event.target.files[0])\n    setOpenUploadDialog(true)\n    setIsSelected(true)\n    var reader = new FileReader();\n    let file = event.target.files[0]\n    reader.onerror = () => {\n      console.log(\"Error while loading file\")\n    }\n    reader.onload = async function(event) {\n      var startTime, endTime\n      startTime = new Date()\n      var rawData = event.target.result\n      if(rawData.length > (10 * 1024 * 1024)) {\n        alert(\"File too large (>10Mb)\")\n      } else {\n        uploadGcodeFileRequest(file.name, rawData)\n        endTime = new Date()\n        console.log(endTime.getTime() - startTime.getTime())\n      }\n    }\n    reader.readAsBinaryString(event.target.files[0])\n\n  }\n\n  const clearSelectedFile = (event) => {\n    event.target.value = null\n    setFileSelected(null)\n    setIsSelected(false)\n    setUploadProgress(0)\n  }\n\n  const handleClose = () => {\n\n  }\n\n  return (\n    <div className=\"gcode-header\">\n      <div className=\"gcode-header-icon\">\n        <InsertDriveFileRoundedIcon color=\"primary\"/>\n      </div>\n      <h3>Files</h3>\n      <div className=\"gcode-header-option\" style={{paddingLeft:\"50%\"}}>\n        <Tooltip title=\"Upload A New File\">\n          <IconButton aria-label=\"add\" size=\"large\" color=\"primary\" component=\"label\" >\n             <AddRoundedIcon fontSize=\"inherit\" />\n             <input type=\"file\" accept=\".gcode\" onChange={handleSelectedFile} onClick={clearSelectedFile} hidden/>\n          </IconButton>\n        </Tooltip>\n      </div>\n      <div className=\"gcode-header-option\">\n        <Tooltip title=\"Refresh File List\">\n          <IconButton aria-label=\"refresh\" size=\"large\" color=\"primary\" onClick={props.refreshFileList}>\n             <RefreshRoundedIcon fontSize=\"inherit\" />\n          </IconButton>\n        </Tooltip>\n      </div>\n      <Dialog\n        open={openUploadDialog}\n        onClose={handleClose}\n        aria-labelledby=\"upload-dialog-title\"\n        aria-describedby=\"upload-dialog-description\"\n      >\n        <DialogTitle>\n          {\"File uploading, please wait\"}\n        </DialogTitle>\n        <DialogContent>\n          <LinearProgress />\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n\nfunction GcodeRow(props) {\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [openEditDialog, setOpenEditDialog] = React.useState(false)\n  // const [fileContent, setFileContent] = React.useState({content: ''})\n  const [fileContent, setFileContent] = React.useState([])\n  const getGcodeFileContentURL = \"http://127.0.0.1:5000/get_gcode_file?filename=\"\n  const updateGcodeFileContentURL = \"http://127.0.0.1:5000/update_gcode_file?filename=\"\n  const deleteGcodeFileURL = \"http://127.0.0.1:5000/delete_gcode_file?filename=\"\n  const open = Boolean(anchorEl)\n  const editPanelRef = React.useRef()\n\n  const getGcodeFileContentRequest = async () => {\n    await axios.get(getGcodeFileContentURL + props.name)\n    .then(response => response.data)\n    .then(result => {\n      if(result.status) {\n        setFileContent(Array.from(result.payload))\n      } else {\n        alert(`Failed to get ${props.name} from the server`)\n      }\n    })\n  }\n\n  const updateGcodeFileContentRequest = async () => {\n    const formData = new FormData()\n    formData.append('action', \"UPDATE_GCODE_FILE\")\n    formData.append('filename', props.name)\n    formData.append('payload', fileContent.content)\n    await axios.post(updateGcodeFileContentURL + props.name, formData)\n    .then(response => response.data)\n    .then(result => {\n      if(result.status) {\n        //\n      } else {\n        alert(`Failed to update ${props.name}`)\n      }\n    })\n  }\n\n  const deleteGcodeFileRequest = async () => {\n    await axios.get(deleteGcodeFileURL + props.name)\n    .then(response => response.data)\n    .then(result => {\n      if(result.status) {\n        //if succeeds, refresh the file list so the newest change can be seen\n        props.refreshFileList()\n      } else {\n        alert(`Failed to delete ${props.name}`)\n      }\n    })\n  }\n\n  const handleRowItemClick = (event) => {\n    setAnchorEl(event.currentTarget)\n    setOpenEditDialog(false)\n  }\n\n  const handleRowItemClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handlePrintClick = () => {\n    setAnchorEl(null)\n    const jsonPackage = {\n      type: \"start_print\",\n      payload: props.name\n    }\n    if(props.name != \"-\") {\n      conn.send(JSON.stringify(jsonPackage))\n      console.log(jsonPackage)\n    }\n  }\n\n  const handleEditClick = () => {\n    setAnchorEl(null)\n    setOpenEditDialog(true)\n    getGcodeFileContentRequest()\n  }\n\n  // const handleDeleteClick = () => {\n  //   setAnchorEl(null)\n  //   const jsonPackage = {\n  //     type: \"gcode_file_delete\",\n  //     payload: props.name\n  //   }\n  //   if(props.name != \"-\") {\n  //     conn.send(JSON.stringify(jsonPackage))\n  //     console.log(jsonPackage)\n  //   }\n  // }\n\n  const handleDeleteClick = () => {\n    setAnchorEl(null)\n    deleteGcodeFileRequest()\n  }\n\n  // const handleFileContentChange = (event) => {\n  //   console.log(event.target.value)\n  //   setFileContent({content: event.target.value})\n  // }\n\n  const handleFileContentChange = (index) => (event) => {\n    console.log(index)\n    console.log(event.target.value)\n    // setFileContent(oldContent => {\n    //   oldContent[index] = event.target.value\n    // })\n  }\n\n  const handleSaveEdit = () => {\n    updateGcodeFileContentRequest()\n    setOpenEditDialog(false)\n  }\n\n  const handleCancelEdit = () => {\n    setOpenEditDialog(false)\n  }\n\n  const menuItemStyle = {\n    paddingLeft: \"20px\",\n    display:\"flex\",\n    justifyContent:\"space-between\"\n  }\n\n\n  const Row = ({ index, style }) => (\n    <div className=\"content-display-row\" style={style}>\n      <TextField\n        fullWidth=\"true\"\n        defaultValue={fileContent[index]}\n        onChange={handleFileContentChange(index)}\n      />\n    </div>\n  )\n\n  // <TextField\n  //   fullWidth=\"true\"\n  //   defaultValue={fileContent[index]}\n  //   onChange={handleFileContentChange(index)}\n  // />\n\n  const ContentPanel = () => (\n    <FixedSizeList\n      className=\"content-display\"\n      height={500}\n      width={860}\n      itemSize={54}\n      itemCount={fileContent.length}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n\n\n  if(props.name === \"Name\") { //This will be the first row(Name:   Last Printed:   Last Modified:), it is not clickable\n    return (\n      <div className=\"gcode-row\">\n        <div className=\"gcode-row-content\">\n          <p style={{flex: 0.48, fontWeight: 'bold', paddingLeft:\"20px\"}}>{props.name}</p>\n          <p style={{flex: 0.38, fontWeight: 'bold'}}>{props.lastPrinted}</p>\n          <p style={{flex: 0.2, fontWeight: 'bold'}}>{props.lastModified}</p>\n        </div>\n      </div>\n    )\n  }\n  else {\n    return ( //These are real clickable rows\n      <div className=\"gcode-row\">\n        <ListItemButton style={{height:\"50px\", display:\"flex\"}}\n          aria-label=\"dropdown\"\n          id=\"long-button\"\n          aria-controls=\"long-menu\"\n          aria-expanded={open ? 'true' : undefined}\n          aria-haspopup=\"true\"\n          onClick={handleRowItemClick}\n        >\n          <div className=\"gcode-row-icon\">\n            <DescriptionRoundedIcon fontSize=\"medium\" color=\"primary\"/>\n          </div>\n          <div className=\"gcode-row-content\">\n            <p id=\"first-column\" style={{}}>{props.name}</p>\n            <p id=\"second-column\" style={{}}>{props.lastPrinted}</p>\n            <p id=\"third-column\" style={{}}>{props.lastModified}</p>\n          </div>\n        </ListItemButton>\n        <Menu\n        id=\"long-menu\"\n        MenuListProps={{\n          'aria-labelledby': 'long-button',\n        }}\n        style={{marginLeft: \"200px\"}}\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleRowItemClose}\n        PaperProps={{\n          style: {\n            maxHeight: 300,\n            width: '22ch',\n          },\n        }}\n        >\n          <MenuItem key=\"print\" style={menuItemStyle} onClick={handlePrintClick}>\n            Print\n            <PrintIcon/>\n          </MenuItem>\n          <MenuItem key=\"edit\" style={menuItemStyle} onClick={handleEditClick}>\n            Edit\n            <EditIcon/>\n          </MenuItem>\n          <MenuItem key=\"delete\" style={menuItemStyle} onClick={handleDeleteClick}>\n            Delete\n            <DeleteIcon/>\n          </MenuItem>\n        </Menu>\n        <Dialog\n          open={openEditDialog}\n          aria-labelledby=\"edit-dialog-title\"\n          aria-describedby=\"edit-dialog-description\"\n          scroll={\"paper\"}\n          sx={{height:\"700px\"}}\n          fullWidth=\"true\"\n          maxWidth=\"md\"\n        >\n          <DialogTitle>{props.name}</DialogTitle>\n          <DialogContent>\n            <ContentPanel />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleSaveEdit}>Save</Button>\n            <Button onClick={handleCancelEdit}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n}\n\n// <textarea\n//   className=\"input\"\n//   rows=\"1\"\n//   cols=\"100\"\n//   defaultValue={fileContent[index]}\n//   onChange={handleFileContentChange(index)}\n//   style={{border:\"none\", outline:\"none\"}}\n// >\n// </textarea>\n\n// <div className=\"gcode-content\" style={{backgroundColor:\"#eff2f5\"}}>\n//   <TextField\n//     multiline\n//     fullWidth=\"true\"\n//     rows=\"20\"\n//     autoFocus=\"true\"\n//     value=\"\"\n//     onChange={handleFileContentChange}\n//   />\n// </div>\n\nfunction Gcode() {\n\n  const [fileList, setFileList] = React.useState([])\n  const getGcodeFileListURL = \"http://127.0.0.1:5000/get_gcode_file_list\"\n  const contextObj = React.useContext(LeftPanelContext)\n\n  const jsonPackage = {\n    type: \"gcode_file_request\",\n    payload: \"\"\n  }\n\n  const requestGcodeFileList = async () => {\n    await axios.get(getGcodeFileListURL)\n     .then(response => response.data)\n     .then(result => {\n       if(result.status) {\n         setFileList(result.payload)\n       } else {\n         alert(\"Failed to get gcode files from the server\")\n       }\n     }\n     )\n  }\n\n  const refreshFileList = () => {\n    requestGcodeFileList()\n    console.log(\"Refresh file list\")\n  }\n\n  React.useEffect(() => {\n    requestGcodeFileList()\n\n  }, [])\n\n  // React.useEffect(() => {\n  //   setInterval(() => {\n  //     conn.send(JSON.stringify(jsonPackage))\n  //   }, 1000)\n  // },[])\n\n  return (\n    <div className=\"gcode\">\n      <GcodeHeader refreshFileList={refreshFileList}/>\n      <GcodeRow name=\"Name\" lastPrinted=\"Last Printed\" lastModified=\"Last Modified\" />\n      <List\n        sx={{\n        width: '100%',\n        bgcolor: 'background.paper',\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 200,\n        }}\n      >\n      {\n        fileList.map(function(file, i){\n          return <GcodeRow name={file.name} lastPrinted=\"-\" lastModified={file.modified} refreshFileList={refreshFileList}/>\n        })\n      }\n      </List>\n    </div>\n  )\n\n}\n\nexport default React.memo(Gcode)\n\n// {\n//   contextObj.gcodeFileList.map(function(filename, i){\n//     return <GcodeRow name={filename} lastPrinted=\"-\" lastModified=\"Today at 15:33\" />\n//     })\n// }\n\n\n// <GcodeRow name=\"3DBenchy.gcode\" lastPrinted=\"-\" lastModified=\"Today at 15:33\" />\n// <GcodeRow name=\"Pikachu.gcode\" lastPrinted=\"-\" lastModified=\"Today at 15:33\" />\n// <GcodeRow name=\"TestCube.gcode\" lastPrinted=\"-\" lastModified=\"Today at 15:33\" />\n// <GcodeRow name=\"PressureAdvanceTests.gcode\" lastPrinted=\"-\" lastModified=\"Today at 15:33\" />\n// <GcodeRow name=\"FanSet.gcode\" lastPrinted=\"-\" lastModified=\"Today at 15:33\" />\n// <GcodeRow name=\"HeatTower.gcode\" lastPrinted=\"-\" lastModified=\"Today at 15:33\" />\n// <GcodeRow name=\"IronMan.gcode\" lastPrinted=\"-\" lastModified=\"Today at 15:33\" />\n","/Users/zepingchen/Desktop/back_up/printer_web_interface/src/components/Printer.js",["196","197","198","199","200","201","202","203","204","205","206"],"import React from \"react\"\nimport { ButtonGroup } from '@mui/material'\nimport { IconButton } from '@mui/material'\nimport { Button } from '@mui/material'\nimport { TextField } from '@mui/material'\nimport { Slider } from '@mui/material'\nimport HomeIcon from '@mui/icons-material/Home'\nimport LockIcon from '@mui/icons-material/Lock'\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward'\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward'\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack'\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward'\nimport PrintIcon from '@mui/icons-material/Print'\nimport VisibilityIcon from '@mui/icons-material/Visibility'\nimport \"./Printer.css\"\n\nimport Tooltip from '@mui/material/Tooltip'\nimport CircularProgress, {CircularProgressProps} from '@mui/material/CircularProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\n\nimport ToggleButton from '@mui/material/ToggleButton'\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup'\n\nimport PlayCircleFilledWhiteIcon from '@mui/icons-material/PlayCircleFilledWhite'\nimport PauseCircleFilledIcon from '@mui/icons-material/PauseCircleFilled'\nimport CancelIcon from '@mui/icons-material/Cancel'\n\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogTitle from '@mui/material/DialogTitle'\n\nimport { red, pink, grey }  from '@mui/material/colors'\n\nimport {RightPanelContext} from \"./Context\"\nimport {conn} from \"./WebSocket\"\n\nconst axisArray = ['X', 'Y', 'Z', 'E']\n\n// function getJsonPackageToolHeadRelativeMove(axis, value) {\n//   return {\n//     type: \"gcode_command\",\n//     payload: `G91\\nG1 ${axis}${value}`\n//   }\n// }\n\nfunction getJsonPackageToolHeadRelativeMove(axis, value) {\n  var displacement = [0.0, 0.0, 0.0, 0.0]\n  var idx = axisArray.indexOf(axis)\n  // displacement[idx] = parseInt(value)\n  displacement[idx] = parseFloat(value)\n  return {\n    type: \"relative_move\",\n    payload: displacement\n  }\n}\n\n// function getJsonPackageToolHeadAbsoluteMove(axis, value) {\n//   return {\n//     type: \"gcode_command\",\n//     payload: `G90\\nG1 ${axis}${value}`\n//   }\n// }\n\nfunction getJsonPackageToolHeadAbsoluteMove(axis, value) {\n  var destination = [0.0, 0.0, 0.0, 0.0]\n  var idx = axisArray.indexOf(axis)\n  // destination[idx] = parseInt(value)\n  destination[idx] = parseFloat(value)\n  return {\n    type: \"relative_move\",\n    payload: destination\n  }\n}\n\n// function getJsonPackageExtruderMove(value) {\n//   //always a relative move\n//   return {\n//     type: \"gcode_command\",\n//     payload: `M83\\nG1 E${value}`\n//   }\n// }\n\nfunction getJsonPackageExtruderMove(value) {\n  //always a relative move\n  return {\n    type: \"relative_move\",\n    payload: [0.0, 0.0, 0.0, parseFloat(value)]\n  }\n}\n\n\nfunction PrinterControlHeader() {\n\n  const handleMotorsOff = () => {\n    const jsonPackage = {\n      type: \"motors_off\",\n      payload: \"\"\n    }\n    conn.send(JSON.stringify(jsonPackage))\n  }\n\n  return (\n    <div className=\"printer-control-header\">\n      <div className=\"printer-control-header-icon\">\n        <PrintIcon color=\"primary\"/>\n      </div>\n      <h3>Tool</h3>\n      <div className=\"printer-motors-off\" style={{paddingLeft: \"140px\"}}>\n        <Button variant=\"contained\" size=\"small\" onClick={handleMotorsOff}>Motors off</Button>\n      </div>\n    </div>\n  )\n}\n\nfunction PrinterControl() {\n\n  const iconButtonStyle = {\n    width: \"36px\",\n    height: \"36px\"\n  }\n  const toggleButtonStyle = {\n    width: \"60px\",\n    height: \"35px\"\n  }\n  const textFieldStyle = {\n    paddingRight: \"5px\"\n  }\n\n  const [toolheadScale, setToolheadScale] = React.useState('10')\n  const [extruderScale, setExtruderScale] = React.useState('0.005')\n  const [extrudeLength, setExtrudeLength] = React.useState(\"\")\n  const [retractLength, setRetractLength] = React.useState(\"\")\n\n  const handleToolheadScaleChange = (event, newScale) => {\n    setToolheadScale(newScale);\n  }\n  const handleExtruderScaleChange = (event, newScale) => {\n    setExtruderScale(newScale)\n  }\n\n  const handleExtrudeLengthChange = (event) => {\n    setExtrudeLength(event.target.value)\n  }\n  const handleRetractLengthChange = (event) => {\n    setRetractLength(event.target.value)\n  }\n\n  const handleExtrude = () => {\n    if(extrudeLength === \"\") {\n      console.log(extruderScale)\n      const jsonPackage = getJsonPackageExtruderMove(extruderScale)\n      conn.send(JSON.stringify(jsonPackage))\n    } else {\n      console.log(extrudeLength)\n      const jsonPackage = getJsonPackageExtruderMove(extrudeLength)\n      conn.send(JSON.stringify(jsonPackage))\n    }\n  }\n  const handleRetract = () => {\n    if(retractLength === \"\") {\n      console.log(extruderScale)\n      const jsonPackage = getJsonPackageExtruderMove(-extruderScale)\n      conn.send(JSON.stringify(jsonPackage))\n    } else {\n      console.log(retractLength)\n      const jsonPackage = getJsonPackageExtruderMove(-retractLength)\n      conn.send(JSON.stringify(jsonPackage))\n    }\n  }\n\n  const handleXForward = () => {\n    console.log(`x forward ${toolheadScale}`)\n    const jsonPackage = getJsonPackageToolHeadRelativeMove('X', toolheadScale)\n    conn.send(JSON.stringify(jsonPackage))\n  }\n  const handleXBackward = () => {\n    console.log(`x backward ${toolheadScale}`)\n    const jsonPackage = getJsonPackageToolHeadRelativeMove('X', -toolheadScale)\n    conn.send(JSON.stringify(jsonPackage))\n  }\n  const handleYForward = () => {\n    console.log(`y forward ${toolheadScale}`)\n    const jsonPackage = getJsonPackageToolHeadRelativeMove('Y', toolheadScale)\n    conn.send(JSON.stringify(jsonPackage))\n  }\n  const handleYBackward = () => {\n    console.log(`y backward ${toolheadScale}`)\n    const jsonPackage = getJsonPackageToolHeadRelativeMove('Y', -toolheadScale)\n    conn.send(JSON.stringify(jsonPackage))\n  }\n  const handleZUpward = () => {\n    console.log(`z upward ${toolheadScale}`)\n    const jsonPackage = getJsonPackageToolHeadRelativeMove('Z', toolheadScale)\n    conn.send(JSON.stringify(jsonPackage))\n  }\n  const handleZDownward = () => {\n    console.log(`z downward ${toolheadScale}`)\n    const jsonPackage = getJsonPackageToolHeadRelativeMove('Z', -toolheadScale)\n    conn.send(JSON.stringify(jsonPackage))\n  }\n  const handleXHoming = () => {\n    console.log(\"x homing\")\n    const jsonPackage = {\n      type: \"gcode_command\",\n      payload: \"G28 X\"\n    }\n    conn.send(JSON.stringify(jsonPackage))\n  }\n  const handleYHoming = () => {\n    console.log(\"y homing\")\n    const jsonPackage = {\n      type: \"gcode_command\",\n      payload: \"G28 Y\"\n    }\n    conn.send(JSON.stringify(jsonPackage))\n  }\n  const handleZHoming = () => {\n    console.log(\"z homing\")\n    const jsonPackage = {\n      type: \"gcode_command\",\n      payload: \"G28 Z\"\n    }\n    conn.send(JSON.stringify(jsonPackage))\n  }\n  const handleXYHoming = () => {\n    console.log(\"xy homing\")\n    const jsonPackage = {\n      type: \"gcode_command\",\n      payload: \"G28 X Y\"\n    }\n    conn.send(JSON.stringify(jsonPackage))\n  }\n  const handleXYZHoming = () => {\n    console.log(\"xyz homing\")\n    const jsonPackage = {\n      type: \"gcode_command\",\n      payload: \"G28 X Y Z\"\n    }\n    conn.send(JSON.stringify(jsonPackage))\n  }\n\n  const handleClosedLoop = (axis) => {\n    const jsonPackage = {\n      type: \"closedloop\",\n      payload: axis\n    }\n    conn.send(JSON.stringify(jsonPackage))\n  }\n\n  return (\n    <div className=\"printer-control\">\n      <PrinterControlHeader />\n      <div className=\"printer-control-first\">\n        <div className=\"printer-control-option\" style={{marginLeft:\"60px\", backgroundColor:\"\"}}>\n          <IconButton aria-label=\"y-forward\" size=\"large\" color=\"primary\" onClick={handleYForward}>\n             <ArrowUpwardIcon style={iconButtonStyle} fontSize=\"inherit\" />\n          </IconButton>\n        </div>\n        <div className=\"printer-control-option\" style={{marginLeft:\"60px\", backgroundColor:\"\"}}>\n          <IconButton aria-label=\"z-upward\" size=\"large\" color=\"primary\" onClick={handleZUpward}>\n             <ArrowUpwardIcon style={iconButtonStyle} fontSize=\"inherit\" />\n          </IconButton>\n        </div>\n        <div className=\"printer-control-option\">\n          <Tooltip title=\"Home ALL\">\n            <Button variant=\"outlined\" startIcon={<HomeIcon />} onClick={handleXYZHoming}>\n              ALL\n            </Button>\n          </Tooltip>\n        </div>\n      </div>\n      <div className=\"printer-control-second\">\n        <div className=\"printer-control-option\">\n          <IconButton aria-label=\"x-backward\" size=\"large\" color=\"primary\" onClick={handleXBackward}>\n             <ArrowBackIcon style={iconButtonStyle} fontSize=\"inherit\" />\n          </IconButton>\n        </div>\n        <div className=\"printer-control-option\">\n          <Tooltip title=\"Home XY\">\n            <IconButton aria-label=\"xy-homing\" size=\"large\" color=\"primary\" onClick={handleXYHoming}>\n               <HomeIcon style={iconButtonStyle} fontSize=\"inherit\" />\n            </IconButton>\n          </Tooltip>\n        </div>\n        <div className=\"printer-control-option\">\n          <IconButton aria-label=\"x-forward\" size=\"large\" color=\"primary\" onClick={handleXForward}>\n             <ArrowForwardIcon style={iconButtonStyle} fontSize=\"inherit\" />\n          </IconButton>\n        </div>\n        <div className=\"printer-control-option\">\n          <Tooltip title=\"Home Z\">\n            <IconButton aria-label=\"z-homing\" size=\"large\" color=\"primary\" onClick={handleZHoming}>\n               <HomeIcon style={iconButtonStyle} fontSize=\"inherit\" />\n            </IconButton>\n          </Tooltip>\n        </div>\n        <div className=\"printer-control-option\">\n          <Tooltip title=\"Home X\">\n            <Button variant=\"outlined\" startIcon={<HomeIcon />} onClick={handleXHoming}>\n              X\n            </Button>\n          </Tooltip>\n        </div>\n      </div>\n      <div className=\"printer-control-third\">\n        <div className=\"printer-control-option\" style={{marginLeft:\"60px\", backgroundColor:\"\"}}>\n          <IconButton aria-label=\"y-backward\" size=\"large\" color=\"primary\" onClick={handleYBackward}>\n             <ArrowDownwardIcon style={iconButtonStyle} fontSize=\"inherit\" />\n          </IconButton>\n        </div>\n        <div className=\"printer-control-option\" style={{marginLeft:\"60px\", backgroundColor:\"\"}}>\n          <IconButton aria-label=\"z-downward\" size=\"large\" color=\"primary\" onClick={handleZDownward}>\n             <ArrowDownwardIcon style={iconButtonStyle} fontSize=\"inherit\" />\n          </IconButton>\n        </div>\n        <div className=\"printer-control-option\">\n          <Tooltip title=\"Home Y\">\n            <Button variant=\"outlined\" startIcon={<HomeIcon />} onClick={handleYHoming}>\n              Y\n            </Button>\n          </Tooltip>\n        </div>\n      </div>\n      <div className=\"printer-display-closedloop\">\n        <Tooltip title=\"Closed Loop X\">\n          <Button style={{width:\"50px\"}} variant=\"outlined\" startIcon={<LockIcon />} onClick={() => handleClosedLoop('X')}>\n            X\n          </Button>\n        </Tooltip>\n        <Tooltip title=\"Closed Loop Y\">\n          <Button style={{width:\"50px\"}} variant=\"outlined\" startIcon={<LockIcon />} onClick={() => handleClosedLoop('Y')}>\n            Y\n          </Button>\n        </Tooltip>\n        <Tooltip title=\"Closed Loop Z\">\n          <Button style={{width:\"50px\"}} variant=\"outlined\" startIcon={<LockIcon />} onClick={() => handleClosedLoop('Z')}>\n            Z\n          </Button>\n        </Tooltip>\n        <Tooltip title=\"Closed Loop E\">\n          <Button style={{width:\"50px\"}} variant=\"outlined\" startIcon={<LockIcon />} onClick={() => handleClosedLoop('E')}>\n            E\n          </Button>\n        </Tooltip>\n        <Tooltip title=\"Closed Loop ALL\">\n          <Button style={{width:\"50px\"}} variant=\"outlined\" startIcon={<LockIcon />} onClick={() => handleClosedLoop('A')}>\n            ALL\n          </Button>\n        </Tooltip>\n      </div>\n      <div className=\"printer-control-fourth\">\n        <ToggleButtonGroup\n          value={toolheadScale}\n          exclusive\n          onChange={handleToolheadScaleChange}\n          aria-label=\"scale selection\">\n          <ToggleButton style={toggleButtonStyle} value=\"0.1\">\n            0.1\n          </ToggleButton>\n          <ToggleButton style={toggleButtonStyle} value=\"1.0\">\n            1.0\n          </ToggleButton>\n          <ToggleButton style={toggleButtonStyle} value=\"10\">\n            10\n          </ToggleButton>\n          <ToggleButton style={toggleButtonStyle} value=\"25\">\n            25\n          </ToggleButton>\n          <ToggleButton style={toggleButtonStyle} value=\"100\">\n            100\n          </ToggleButton>,\n        </ToggleButtonGroup>\n      </div>\n      <div className=\"printer-control-fifth\" >\n        <TextField style={textFieldStyle}\n          size=\"small\"\n          id=\"extrude-length\"\n          placeholder=\"mm\"\n          value={extrudeLength}\n          onChange={handleExtrudeLengthChange}\n          label=\"Extrude Length\"\n          variant=\"outlined\" />\n        <Button variant=\"contained\" onClick={handleExtrude} endIcon={<ArrowDownwardIcon />}>\n          Extrude\n        </Button>\n      </div>\n      <div className=\"printer-control-sixth\" >\n        <TextField style={textFieldStyle}\n          size=\"small\"\n          id=\"retract-length\"\n          placeholder=\"mm\"\n          value={retractLength}\n          onChange={handleRetractLengthChange}\n          label=\"Retract Length\"\n          variant=\"outlined\" />\n        <Button variant=\"contained\" onClick={handleRetract} endIcon={<ArrowUpwardIcon />}>\n          Retract\n        </Button>\n      </div>\n      <div className=\"printer-control-seventh\">\n        <ToggleButtonGroup\n          value={extruderScale}\n          exclusive\n          onChange={handleExtruderScaleChange}\n          aria-label=\"scale selection\">\n          <ToggleButton style={toggleButtonStyle} value=\"0.005\">\n            0.005\n          </ToggleButton>\n          <ToggleButton style={toggleButtonStyle} value=\"0.010\">\n            0.010\n          </ToggleButton>\n          <ToggleButton style={toggleButtonStyle} value=\"0.025\">\n            0.025\n          </ToggleButton>\n          <ToggleButton style={toggleButtonStyle} value=\"0.100\">\n            0.100\n          </ToggleButton>\n          <ToggleButton style={toggleButtonStyle} value=\"0.500\">\n            0.500\n          </ToggleButton>,\n        </ToggleButtonGroup>\n      </div>\n    </div>\n  )\n}\n\nfunction PrinterDisplayHeader(props) {\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const handleOpenDialog = () => {\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  const handleCloseDialogWithYes = () => {\n    setOpenDialog(false);\n    const jsonPackage = {\n      type: \"cancel_print\",\n      payload: \"\"\n    }\n    conn.send(JSON.stringify(jsonPackage))\n  }\n\n  const handleCancelPrint = () => {\n    handleOpenDialog();\n  }\n\n  const handlePausePrint = () => {\n    const jsonPackage = {\n      type: \"pause_print\",\n      payload: \"\"\n    }\n    conn.send(JSON.stringify(jsonPackage))\n  }\n  const handleResumePrint = () => {\n    const jsonPackage = {\n      type: \"resume_print\",\n      payload: \"\"\n    }\n    conn.send(JSON.stringify(jsonPackage))\n  }\n\n\n  return (\n    <div className=\"printer-display-header\">\n      <div className=\"printer-display-header-icon\">\n        <VisibilityIcon color=\"primary\"/>\n      </div>\n      <h3 style={{paddingRight:\"160px\"}}>Print</h3>\n      {props.isPrinting ?\n        (\n          <Tooltip title=\"Pause\">\n            <IconButton aria-label=\"pause\" size=\"large\" color=\"primary\" onClick={handlePausePrint}>\n               <PauseCircleFilledIcon fontSize=\"inherit\" />\n            </IconButton>\n          </Tooltip>\n        ) :\n        (\n          <Tooltip title=\"Resume\">\n            <IconButton aria-label=\"resume\" size=\"large\" color=\"primary\" onClick={handleResumePrint}>\n               <PlayCircleFilledWhiteIcon fontSize=\"inherit\" />\n            </IconButton>\n          </Tooltip>\n        )\n      }\n      <Tooltip title=\"Cancel\">\n        <IconButton aria-label=\"cancel\" size=\"large\" sx={{ color: red[800] }} onClick={handleCancelPrint}>\n           <CancelIcon fontSize=\"inherit\" />\n        </IconButton>\n      </Tooltip>\n      <Dialog\n        open={openDialog}\n        onClose={handleCloseDialog}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Are you sure you want to cancel the print?\"}\n        </DialogTitle>\n        <DialogActions>\n          <Button onClick={handleCloseDialog}>No</Button>\n          <Button onClick={handleCloseDialogWithYes} autoFocus>\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nfunction Progress(props) {\n\n  var progress = 0;\n  var progressHeader = <h4>No printing at the moment</h4>;\n\n  function updateProgress() {\n    if(props.task === undefined) { //when there is no task\n      progress = 0;\n    }\n    else {\n      progress = props.task.time_spent / (props.task.time_spent + props.task.time_left) * 100;\n    }\n  }\n\n   /*\n    CREATED = 0\n    READY = 1\n    PRINTING = 2\n    SUSPENDED = 3\n    COMPLETED = 4\n    CANCELED = 5\n  */\n\n  function updateProgressHeader() {\n    if(props.isPrinting) {\n      if(props.task.name === undefined) {\n        progressHeader = <h4>undefined file</h4>;\n      }\n      else {\n        progressHeader = <h4>{props.task.name}</h4>;\n      }\n    }\n    else {\n      //same as above\n      if(props.task === undefined) { //when there is no task\n        progressHeader = <h4>No print at the moment</h4>;\n      }\n      else {\n        if(props.task.state === 3) {\n          progressHeader = <h4>The print has been suspended</h4>;\n        }\n        else if(props.task.state === 4) {\n          progressHeader = <h4>Print complete</h4>;\n        }\n        else if(props.task.state === 5) {\n          progressHeader = <h4>The print has been canceled</h4>;\n        }\n      }\n    }\n  }\n\n  // function updateProgress() {\n  //   //error handling when the task queue is empty and there is no task\n  //   try {\n  //     progress = props.task.time_spent / (props.task.time_spent + props.task.time_left) * 100\n  //   } catch(e) {\n  //     console.log(e);\n  //   }\n  // }\n\n  // function updateProgressHeader() {\n  //   if(props.isPrinting) {\n  //     progressHeader = <h4>{props.task.name}</h4>;\n  //   }\n  //   else {\n  //     //same as above\n  //     try {\n  //       if(props.task.state === 3) {\n  //         progressHeader = <h4>The print has been suspended</h4>;\n  //       }\n  //       else {\n  //         progressHeader = <h4>No print at the moment</h4>;\n  //       }\n  //     } catch(e) {\n  //       console.log(e);\n  //     }\n  //   }\n  // }\n\n  function timeConvert(d) {\n    d = Number(d);\n    var h = Math.floor(d / 3600);\n    var m = Math.floor(d % 3600 / 60);\n    var s = Math.floor(d % 3600 % 60);\n    var hDisplay = h > 0 ? h + (h == 1 ? \" h \" : \" h \") : \"\";\n    var mDisplay = m > 0 ? m + (m == 1 ? \" m \" : \" m \") : \"\";\n    var sDisplay = s > 0 ? s + (s == 1 ? \" s\" : \" s\") : \"\";\n    return hDisplay + mDisplay + sDisplay;\n  }\n\n  updateProgressHeader();\n  updateProgress();\n\n  // {props.isPrinting ? (\n  //   <h4>{props.task.name}</h4>\n  // ) : (\n  //   <h4>No printing at the moment</h4>\n  // )}\n\n  return (\n    <div className=\"printer-display-progress\">\n      <div className=\"printer-display-progress-header\">\n        {progressHeader}\n      </div>\n      <div className=\"printer-display-progress-body\">\n        <div className=\"printer-display-progress-left\">\n          <Box sx={{ position: 'relative', display: 'inline-flex'}}>\n            <CircularProgress variant=\"determinate\" color='primary' thickness={3} value={Math.round(progress)} size={120}\n              style={{\n                borderRadius: \"100%\",\n                boxShadow: \"inset 0 0 0px 8px DarkGrey\",\n            }}/>\n            <Box\n              sx={{\n                top: 0,\n                left: 0,\n                bottom: 0,\n                right: 0,\n                position: 'absolute',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <Typography variant=\"h6\" component=\"div\" color=\"text.secondary\">\n                {`${Math.round(progress)}%`}\n              </Typography>\n            </Box>\n          </Box>\n        </div>\n        <div className=\"printer-display-progress-right\">\n          {props.isPrinting &&\n            <div>\n              <h4>Total time: {timeConvert(props.task.time_spent + props.task.time_left)}</h4>\n              <h4>Time left: {timeConvert(props.task.time_left)}</h4>\n              <h4>Speed: {`${parseInt(props.speed)} mm/s`}</h4>\n            </div>\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction PrinterDisplay() {\n\n  const [progress, setProgress] = React.useState(0)\n  const [xValue, setXValue] = React.useState(0)\n  const [yValue, setYValue] = React.useState(0)\n  const [zValue, setZValue] = React.useState(0)\n  const [acceleration, setAcceleration] = React.useState(0)\n  const [deceleration, setDeceleration] = React.useState(0)\n\n  const contextObj = React.useContext(RightPanelContext)\n\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      if(contextObj.isPrinting) {\n        setProgress((prevProgress) => (prevProgress >= 100 ? 100 : prevProgress + 1));\n      }\n      else {\n        setProgress(0);\n      }\n    }, 600);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  React.useEffect(() => {\n    setAcceleration(contextObj.toolhead.maxAccel);\n    setDeceleration(contextObj.toolhead.maxDecel);\n    console.log(\"dwnodjwoj\")\n  }, [contextObj.toolhead.maxAccel, contextObj.toolhead.maxDecel])\n\n  const handleXValueChange = (event) => {\n    setXValue(event.target.value)\n  }\n  const handleYValueChange = (event) => {\n    setYValue(event.target.value)\n  }\n  const handleZValueChange = (event) => {\n    setZValue(event.target.value)\n  }\n\n  // const handleAbsoluteMoveX = (event) => {\n  //   if(event.key === 'Enter') {\n  //     const jsonPackage = {\n  //       type: \"gcode_command\",\n  //       payload: `G90\\nG1 X${event.target.value}`\n  //     }\n  //     conn.send(JSON.stringify(jsonPackage))\n  //   }\n  // }\n  // const handleAbsoluteMoveY = (event) => {\n  //   if(event.key === 'Enter') {\n  //     const jsonPackage = {\n  //       type: \"gcode_command\",\n  //       payload: `G90\\nG1 Y${event.target.value}`\n  //     }\n  //     conn.send(JSON.stringify(jsonPackage))\n  //   }\n  // }\n  // const handleAbsoluteMoveZ = (event) => {\n  //   if(event.key === 'Enter') {\n  //     const jsonPackage = {\n  //       type: \"gcode_command\",\n  //       payload: `G90\\nG1 Z${event.target.value}`\n  //     }\n  //     conn.send(JSON.stringify(jsonPackage))\n  //   }\n  // }\n\n  const handleAbsoluteMoveX = (event) => {\n    var targetPositionX = parseInt(event.target.value)\n    if(event.key === 'Enter') {\n      const jsonPackage = {\n        type: \"absolute_move\",\n        payload: [targetPositionX, 9999, 9999, 9999]\n      }\n      conn.send(JSON.stringify(jsonPackage))\n    }\n  }\n  const handleAbsoluteMoveY = (event) => {\n    var targetPositionY = parseInt(event.target.value)\n    if(event.key === 'Enter') {\n      const jsonPackage = {\n        type: \"absolute_move\",\n        payload: [9999, targetPositionY, 9999, 9999]\n      }\n      conn.send(JSON.stringify(jsonPackage))\n    }\n  }\n  const handleAbsoluteMoveZ = (event) => {\n    var targetPositionZ = parseInt(event.target.value)\n    if(event.key === 'Enter') {\n      const jsonPackage = {\n        type: \"absolute_move\",\n        payload: [9999, 9999, targetPositionZ, 9999]\n      }\n      conn.send(JSON.stringify(jsonPackage))\n    }\n  }\n\n  const handleAccelerationChangeCommitted = (event, value) => {\n    const jsonPackage = {\n      type: \"set_max_acceleration\",\n      payload: value\n    }\n    conn.send(JSON.stringify(jsonPackage))\n  }\n\n  const handleDecelerationChangeCommitted = (event, value) => {\n    const jsonPackage = {\n      type: \"set_max_deceleration\",\n      payload: value\n    }\n    conn.send(JSON.stringify(jsonPackage))\n  }\n\n  const handleClosedLoop = (axis) => {\n    const jsonPackage = {\n      type: \"closedloop\",\n      payload: axis\n    }\n    conn.send(JSON.stringify(jsonPackage))\n  }\n\n  return (\n    <div className=\"printer-display\">\n      <PrinterDisplayHeader isPrinting={contextObj.isPrinting} task={contextObj.taskQueue[0]} />\n      <Progress isPrinting={contextObj.isPrinting} task={contextObj.taskQueue[0]} speed={contextObj.toolhead.moveSpeed}/>\n      <div className=\"printer-display-position\">\n        <h3>X:</h3>\n        <TextField\n          style={{width:\"80px\"}}\n          size=\"small\"\n          id=\"x-position\"\n          label=\"\"\n          defaultValue={contextObj.toolhead.position[0]}\n          value={contextObj.isPrinting? contextObj.toolhead.position[0] : xValue}\n          onChange={handleXValueChange}\n          onKeyDown={handleAbsoluteMoveX}\n        />\n        <h3>Y:</h3>\n        <TextField\n          style={{width:\"80px\"}}\n          size=\"small\"\n          id=\"y-position\"\n          label=\"\"\n          defaultValue={contextObj.toolhead.position[1]}\n          value={contextObj.isPrinting? contextObj.toolhead.position[1] : yValue}\n          onChange={handleYValueChange}\n          onKeyDown={handleAbsoluteMoveY}\n        />\n        <h3>Z:</h3>\n        <TextField\n          style={{width:\"80px\"}}\n          size=\"small\"\n          id=\"z-position\"\n          label=\"\"\n          defaultValue={contextObj.toolhead.position[2]}\n          onChange={handleZValueChange}\n          value={contextObj.isPrinting? contextObj.toolhead.position[2] : zValue}\n          onKeyDown={handleAbsoluteMoveZ}\n        />\n      </div>\n      <div className=\"printer-display-slider\">\n        <h3>Max Acceleration:</h3>\n        <Slider\n          value={acceleration}\n          defaultValue={acceleration}\n          aria-label=\"Small\"\n          valueLabelDisplay=\"auto\"\n          onChangeCommitted={handleAccelerationChangeCommitted}\n          max={60000}\n        />\n      </div>\n      <div className=\"printer-display-slider\">\n        <h3>Max Deceleration:</h3>\n        <Slider\n          value={deceleration}\n          defaultValue={deceleration}\n          aria-label=\"Small\"\n          valueLabelDisplay=\"auto\"\n          onChangeCommitted={handleDecelerationChangeCommitted}\n          max={60000}\n        />\n      </div>\n    </div>\n  )\n}\nfunction Printer() {\n  return (\n    <div className=\"printer\">\n      <PrinterDisplay />\n      <PrinterControl />\n    </div>\n  )\n}\n\nexport default Printer\n\n// <ButtonGroup variant=\"contained\" aria-label=\"outlined primary button group\">\n//   <Button style={buttonStyle}>0.1</Button>\n//   <Button style={buttonStyle}>1.0</Button>\n//   <Button style={buttonStyle}>10</Button>\n//   <Button style={buttonStyle}>25</Button>\n//   <Button style={buttonStyle}>100</Button>\n// </ButtonGroup>\n\n// <ButtonGroup variant=\"contained\" aria-label=\"outlined primary button group\">\n//   <Button style={buttonStyle}>0.005</Button>\n//   <Button style={buttonStyle}>0.010</Button>\n//   <Button style={buttonStyle}>0.025</Button>\n//   <Button style={buttonStyle}>0.050</Button>\n//   <Button style={buttonStyle}>0.100</Button>\n// </ButtonGroup>\n","/Users/zepingchen/Desktop/back_up/printer_web_interface/src/components/Thermal.js",["207","208"],"import React from \"react\"\nimport LocalFireDepartmentRoundedIcon from '@mui/icons-material/LocalFireDepartmentRounded'\nimport Button from '@mui/material/Button'\nimport Input from '@mui/material/Input'\nimport ThermalChart from \"./ThermalChart\"\nimport {conn} from \"./WebSocket\"\nimport \"./Thermal.css\"\n\nimport {LeftPanelContext} from \"./Context\"\n\nfunction ThermalHeader(props) {\n\n  const [chartVisibility, setChartVisibility] = React.useState(true)\n  const buttonStyle = {\n    width: \"115px\"\n  }\n\n  // const handleHeaterOff = () => {\n  //   const jsonPackage = {\n  //     type: \"gcode_command\",\n  //     payload: \"M104 S0\\nM140 S0\"\n  //   }\n  //   conn.send(JSON.stringify(jsonPackage))\n  // }\n\n  const handleHeaterOff = () => {\n    const jsonPackage = {\n      type: \"heaters_off\",\n      payload: \"\"\n    }\n    conn.send(JSON.stringify(jsonPackage))\n  }\n\n  const handleChartOff = () => {\n    if(chartVisibility) {\n      props.setDisplayChart(false)\n      setChartVisibility(false)\n    } else {\n      props.setDisplayChart(true)\n      setChartVisibility(true)\n    }\n  }\n  return (\n    <div className=\"thermal-header\">\n      <div className=\"thermal-header-icon\">\n        <LocalFireDepartmentRoundedIcon color=\"primary\"/>\n      </div>\n      <h3 style={{paddingRight: \"48%\"}}>Thermal</h3>\n      <div className=\"thermal-heater-off\" style={{paddingRight:\"10px\"}}>\n        <Button variant=\"contained\" style={buttonStyle} size=\"small\" onClick={handleHeaterOff}>Heaters off</Button>\n      </div>\n      <div className=\"thermal-chart-off\">\n        <Button variant=\"contained\" style={buttonStyle} size=\"small\" onClick={handleChartOff}>{chartVisibility? \"Chart off\" : \"Chart on\"}</Button>\n      </div>\n    </div>\n  )\n}\n\nfunction ThermalRow(props) {\n\n  const [inputValue, setInputValue] = React.useState(\"\")\n\n  const handleInputValueChange = (event) => {\n    setInputValue(event.target.value)\n  }\n\n  const handleSetTemperature = (event) => {\n    if(event.key === 'Enter') {\n      switch(props.name) {\n        case \"Extruder\":\n          // const jsonPackage1 = {\n          //   type: \"gcode_command\",\n          //   payload: `M104 S${event.target.value}`\n          // }\n          const jsonPackage1 = {\n            type: \"set_extruder_temperature\",\n            payload: event.target.value\n          }\n          conn.send(JSON.stringify(jsonPackage1))\n          setInputValue(\"\")\n          break\n        case \"Bed\":\n          // const jsonPackage2 = {\n          //   type: \"gcode_command\",\n          //   payload: `M140 S${event.target.value}`\n          // }\n          const jsonPackage2 = {\n            type: \"set_bed_temperature\",\n            payload: event.target.value\n          }\n          conn.send(JSON.stringify(jsonPackage2))\n          setInputValue(\"\")\n          break\n        case \"Pi\":\n          setInputValue(\"\")\n          break\n        default:\n          break\n      }\n    }\n  }\n\n  if(props.name === \"NAME\") {\n    return (\n      <div className=\"thermal-row\">\n        <p style={{fontWeight: 'bold'}}>{props.name}</p>\n        <p style={{fontWeight: 'bold'}}>{props.power}</p>\n        <p style={{fontWeight: 'bold'}}>{props.temp}</p>\n        <p style={{fontWeight: 'bold'}}>{props.target}</p>\n      </div>\n    )\n  }\n  else {\n    return (\n      <div className=\"thermal-row\">\n        <p stype={{padding: \"0px 10px\"}}>{props.name}</p>\n        <p>{props.power}</p>\n        <p>{props.temp}</p>\n        <input\n          type=\"text\"\n          placeholder=\"°C\"\n          value={inputValue}\n          onChange={handleInputValueChange}\n          onKeyDown={handleSetTemperature}\n        />\n      </div>\n    )\n  }\n}\n\nfunction Thermal() {\n\n\n  const [displayChart, setDisplayChart] = React.useState(true)\n  const contextObj = React.useContext(LeftPanelContext)\n\n  React.useEffect(() => {\n    const jsonPackage = {\n      type: \"get_temperature_all\",\n      payload: \"\"\n    }\n    // setInterval(() => {\n    //   conn.send(JSON.stringify(jsonPackage))\n    // },1000)\n\n  }, [])\n\n  // <ThermalChart displayChart={displayChart} temperature={contextObj.temperature} />\n\n  return (\n    <div className=\"thermal\">\n      <ThermalHeader setDisplayChart={setDisplayChart}/>\n      <ThermalRow name=\"NAME\" power=\"Power\" temp=\"Temp\" target=\"Target\"/>\n      <ThermalRow name=\"Extruder\" power={contextObj.extruder.setTemp > 0? \"on\" : \"off\"} temp={`${contextObj.extruder.temp}°C`} target=\"0\"/>\n      <ThermalRow name=\"Bed\" power={contextObj.bed.setTemp > 0? \"on\" : \"off\"} temp={`${contextObj.bed.temp}°C`} target=\"0\"/>\n      <ThermalRow name=\"PI\" power=\"on\" temp={`${contextObj.pi.temp}°C`} target=\"0\"/>\n      <ThermalChart displayChart={displayChart} temperature={ {extruder: contextObj.extruder.temp, bed: contextObj.bed.temp, pi: contextObj.pi.temp} }/>\n    </div>\n  )\n}\n\n// return (\n//   <div className=\"thermal\">\n//     <ThermalHeader setDisplayChart={setDisplayChart}/>\n//     <ThermalRow name=\"NAME\" power=\"Power\" temp=\"Temp\" target=\"Target\"/>\n//     <ThermalRow name=\"Extruder\" power={contextObj.isHeating? \"on\" : \"off\"} temp={`${contextObj.temperature.extruder}°C`} target=\"0\"/>\n//     <ThermalRow name=\"Bed\" power={contextObj.isHeating? \"on\" : \"off\"} temp={`${contextObj.temperature.bed}°C`} target=\"0\"/>\n//     <ThermalRow name=\"PI\" power=\"on\" temp={`${contextObj.temperature.pi}°C`} target=\"0\"/>\n//     <ThermalChart displayChart={displayChart} temperature={contextObj.temperature} />\n//   </div>\n// )\n\nexport default React.memo(Thermal);\n\n// export default React.memo(\n//   Thermal,\n//   (prevProps, nextProps) => prevProps.value2 === nextProps.value2\n// );\n","/Users/zepingchen/Desktop/back_up/printer_web_interface/src/components/ThermalChart.js",["209","210","211","212"],"import React from \"react\"\nimport CanvasJSReact from '../assets/canvasjs.react'\nimport \"./Thermal.css\"\n\nvar CanvasJS = CanvasJSReact.CanvasJS\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart\n\nvar dataPoints1 = [];\nvar dataPoints2 = [];\nvar updateInterval = 500;\n//initial values\nconst count = 20\nvar yValue1 = 100;\nvar yValue2 = 57;\nvar xValue = 5;\n\nclass ThermalChart extends React.Component {\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.updateChart = this.updateChart.bind(this);\n\t\tthis.toggleDataSeries = this.toggleDataSeries.bind(this);\n\t}\n\tcomponentDidMount(){\n\t\tthis.updateChart(count);\n\t\tsetInterval(this.updateChart, updateInterval);\n\t}\n\n\tshouldComponentUpdate(nextProps, nextState) {\n\t\tif(this.props.displayChart != nextProps.displayChart) {\n\t\t\treturn true\n\t\t} else {\n\t\t\treturn false\n\t\t}\n  }\n\n\ttoggleDataSeries(e) {\n\t\tif (typeof(e.dataSeries.visible) === \"undefined\" || e.dataSeries.visible) {\n\t\t\te.dataSeries.visible = false;\n\t\t}\n\t\telse {\n\t\t\te.dataSeries.visible = true;\n\t\t}\n\t\tthis.chart.render();\n\t}\n\tupdateChart(count) {\n\t\tif(this.props.displayChart) {\n\t\t\tcount = count || 1;\n\t\t\tfor(var i = 0; i < count; i++) {\n\t\t\t\t// xValue += 2;\n\t\t\t\txValue = new Date();\n\t\t\t\t// yValue1 = Math.floor(Math.random() * (130 - 100 + 1) + 100);\n\t\t\t\t// yValue2 = Math.floor(Math.random() * (70 - 57 + 1) + 57);\n\t\t\t\tdataPoints1.push({\n\t\t\t\t  x: xValue,\n\t\t\t\t  y: this.props.temperature.extruder\n\t\t\t\t});\n\t\t\t\tdataPoints2.push({\n\t\t\t\t  x: xValue,\n\t\t\t\t  y: this.props.temperature.bed\n\t\t\t\t});\n\t\t\t}\n\t\t\tif(dataPoints1.length >= count * 2) {\n\t\t\t\tdataPoints1.splice(0, count)\n\t\t\t\tdataPoints2.splice(0, count)\n\t\t\t}\n\t\t\tconst options = {\n\t\t\t\theight: 320,\n\t\t\t\tzoomEnabled: true,\n\t\t\t\ttheme: \"light2\",\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: \"Temperature °C\"\n\t\t\t\t},\n\t\t\t\taxisX: {\n\t\t\t\t\tvalueFormatString: \"hh:mm TT\",\n\t\t\t\t\tlabelAngle: 0,\n\t\t\t\t\ttitle: \"Time\"\n\t\t\t\t},\n\t\t\t\taxisY:{\n\t\t\t\t\tsuffix: \"°C\"\n\t\t\t\t},\n\t\t\t\ttoolTip: {\n\t\t\t\t\tshared: true\n\t\t\t\t},\n\t\t\t\tlegend: {\n\t\t\t\t\tcursor:\"pointer\",\n\t\t\t\t\tverticalAlign: \"top\",\n\t\t\t\t\tfontSize: 15,\n\t\t\t\t\tfontColor: \"dimGrey\",\n\t\t\t\t\titemclick : this.toggleDataSeries\n\t\t\t\t},\n\t\t\t\tdata: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: \"line\",\n\t\t\t\t\t\txValueFormatString: \"hh:mm TT\",\n\t\t\t\t\t\tyValueFormatString: \"#,##0 °C\",\n\t\t\t\t\t\tshowInLegend: true,\n\t\t\t\t\t\tname: \"Extruder\",\n\t\t\t\t\t\tdataPoints: dataPoints1\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: \"line\",\n\t\t\t\t\t\txValueFormatString: \"hh:mm TT\",\n\t\t\t\t\t\tyValueFormatString: \"#,##0 °C\",\n\t\t\t\t\t\tshowInLegend: true,\n\t\t\t\t\t\tname: \"Bed\" ,\n\t\t\t\t\t\tdataPoints: dataPoints2\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tthis.chart.options = options\n\t\t\t\tthis.chart.options.data[0].legendText = \" Extruder - \" + this.props.temperature.extruder + \" °C\";\n\t\t\t\tthis.chart.options.data[1].legendText = \" Bed - \" + this.props.temperature.bed + \" °C\";\n\t\t\t\tthis.chart.render();\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\t// console.log(\"this solve some bugs when switching between header options\");\n      }\n\t\t}\n\t}\n\n\trender() {\n\n\t\tif(this.props.displayChart) {\n\t\t\treturn (\n\t\t\t\t<div className=\"thermal-chart\" >\n\t\t\t\t\t<CanvasJSChart\n\t\t\t\t\t\tonRef={ref => this.chart = ref}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\telse {\n\t\t\treturn (\n\t\t\t\t<div></div>\n\t\t\t)\n\t\t}\n\n\t}\n}\n\nexport default ThermalChart\n","/Users/zepingchen/Desktop/back_up/printer_web_interface/src/assets/canvasjs.react.js",[],"/Users/zepingchen/Desktop/back_up/printer_web_interface/src/assets/canvasjs.min.js",[],["213","214"],"/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/index.js",[],["215","216"],"/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/App.js",["217","218","219","220","221","222"],"/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/components/Config.js",["223","224","225","226","227"],"/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/components/Header.js",["228"],"/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/components/RightPanel.js",["229","230","231"],"/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/components/LeftPanel.js",["232"],"/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/components/WebSocket.js",[],"/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/components/Context.js",[],"/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/components/Reducer.js",["233","234","235","236","237","238","239","240","241","242","243"],"/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/components/Printer.js",["244","245","246","247","248","249","250","251","252","253","254"],"/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/components/Fan.js",["255"],"/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/components/Console.js",["256","257","258","259"],"/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/components/Gcode.js",["260","261","262","263","264","265","266","267"],"/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/components/Thermal.js",["268","269"],"/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/components/ThermalChart.js",["270","271","272","273"],"/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/assets/canvasjs.react.js",[],"/Users/zepingchen/Desktop/Github-Projects/printer_web_interface/src/assets/canvasjs.min.js",[],{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","severity":1,"message":"279","line":9,"column":9,"nodeType":"280","messageId":"281","endLine":9,"endColumn":21},{"ruleId":"278","severity":1,"message":"282","line":9,"column":23,"nodeType":"280","messageId":"281","endLine":9,"endColumn":30},{"ruleId":"278","severity":1,"message":"283","line":10,"column":26,"nodeType":"280","messageId":"281","endLine":10,"endColumn":38},{"ruleId":"278","severity":1,"message":"284","line":14,"column":7,"nodeType":"280","messageId":"281","endLine":14,"endColumn":15},{"ruleId":"278","severity":1,"message":"285","line":16,"column":7,"nodeType":"280","messageId":"281","endLine":16,"endColumn":23},{"ruleId":"286","severity":1,"message":"287","line":147,"column":11,"nodeType":"288","messageId":"289","endLine":148,"endColumn":18},{"ruleId":"278","severity":1,"message":"290","line":5,"column":8,"nodeType":"280","messageId":"281","endLine":5,"endColumn":15},{"ruleId":"278","severity":1,"message":"291","line":3,"column":8,"nodeType":"280","messageId":"281","endLine":3,"endColumn":11},{"ruleId":"278","severity":1,"message":"292","line":4,"column":8,"nodeType":"280","messageId":"281","endLine":4,"endColumn":13},{"ruleId":"278","severity":1,"message":"293","line":21,"column":7,"nodeType":"280","messageId":"281","endLine":21,"endColumn":13},{"ruleId":"278","severity":1,"message":"294","line":9,"column":8,"nodeType":"280","messageId":"281","endLine":9,"endColumn":14},{"ruleId":"278","severity":1,"message":"295","line":10,"column":8,"nodeType":"280","messageId":"281","endLine":10,"endColumn":21},{"ruleId":"278","severity":1,"message":"296","line":11,"column":8,"nodeType":"280","messageId":"281","endLine":11,"endColumn":21},{"ruleId":"278","severity":1,"message":"297","line":12,"column":8,"nodeType":"280","messageId":"281","endLine":12,"endColumn":19},{"ruleId":"278","severity":1,"message":"298","line":105,"column":9,"nodeType":"280","messageId":"281","endLine":105,"endColumn":27},{"ruleId":"278","severity":1,"message":"299","line":14,"column":22,"nodeType":"280","messageId":"281","endLine":14,"endColumn":26},{"ruleId":"278","severity":1,"message":"300","line":1,"column":8,"nodeType":"280","messageId":"281","endLine":1,"endColumn":13},{"ruleId":"301","severity":1,"message":"302","line":25,"column":7,"nodeType":"303","messageId":"304","endLine":25,"endColumn":12},{"ruleId":"301","severity":1,"message":"302","line":28,"column":7,"nodeType":"303","messageId":"304","endLine":28,"endColumn":12},{"ruleId":"301","severity":1,"message":"302","line":31,"column":7,"nodeType":"303","messageId":"304","endLine":31,"endColumn":12},{"ruleId":"301","severity":1,"message":"302","line":34,"column":7,"nodeType":"303","messageId":"304","endLine":34,"endColumn":12},{"ruleId":"301","severity":1,"message":"302","line":37,"column":7,"nodeType":"303","messageId":"304","endLine":37,"endColumn":12},{"ruleId":"301","severity":1,"message":"302","line":40,"column":7,"nodeType":"303","messageId":"304","endLine":40,"endColumn":12},{"ruleId":"301","severity":1,"message":"302","line":43,"column":7,"nodeType":"303","messageId":"304","endLine":43,"endColumn":12},{"ruleId":"301","severity":1,"message":"302","line":46,"column":7,"nodeType":"303","messageId":"304","endLine":46,"endColumn":12},{"ruleId":"301","severity":1,"message":"302","line":49,"column":7,"nodeType":"303","messageId":"304","endLine":49,"endColumn":12},{"ruleId":"301","severity":1,"message":"302","line":52,"column":7,"nodeType":"303","messageId":"304","endLine":52,"endColumn":12},{"ruleId":"278","severity":1,"message":"305","line":47,"column":9,"nodeType":"280","messageId":"281","endLine":47,"endColumn":19},{"ruleId":"278","severity":1,"message":"306","line":2,"column":8,"nodeType":"280","messageId":"281","endLine":2,"endColumn":13},{"ruleId":"278","severity":1,"message":"294","line":10,"column":8,"nodeType":"280","messageId":"281","endLine":10,"endColumn":14},{"ruleId":"278","severity":1,"message":"307","line":15,"column":10,"nodeType":"280","messageId":"281","endLine":15,"endColumn":16},{"ruleId":"278","severity":1,"message":"308","line":30,"column":9,"nodeType":"280","messageId":"281","endLine":30,"endColumn":23},{"ruleId":"278","severity":1,"message":"309","line":29,"column":8,"nodeType":"280","messageId":"281","endLine":29,"endColumn":17},{"ruleId":"278","severity":1,"message":"310","line":41,"column":10,"nodeType":"280","messageId":"281","endLine":41,"endColumn":22},{"ruleId":"278","severity":1,"message":"311","line":43,"column":10,"nodeType":"280","messageId":"281","endLine":43,"endColumn":24},{"ruleId":"278","severity":1,"message":"312","line":44,"column":10,"nodeType":"280","messageId":"281","endLine":44,"endColumn":20},{"ruleId":"278","severity":1,"message":"313","line":209,"column":9,"nodeType":"280","messageId":"281","endLine":209,"endColumn":21},{"ruleId":"314","severity":1,"message":"315","line":267,"column":19,"nodeType":"316","messageId":"317","endLine":267,"endColumn":21},{"ruleId":"278","severity":1,"message":"305","line":462,"column":9,"nodeType":"280","messageId":"281","endLine":462,"endColumn":19},{"ruleId":"278","severity":1,"message":"318","line":464,"column":9,"nodeType":"280","messageId":"281","endLine":464,"endColumn":20},{"ruleId":"278","severity":1,"message":"319","line":2,"column":10,"nodeType":"280","messageId":"281","endLine":2,"endColumn":21},{"ruleId":"278","severity":1,"message":"320","line":18,"column":27,"nodeType":"280","messageId":"281","endLine":18,"endColumn":48},{"ruleId":"278","severity":1,"message":"299","line":33,"column":15,"nodeType":"280","messageId":"281","endLine":33,"endColumn":19},{"ruleId":"278","severity":1,"message":"321","line":33,"column":21,"nodeType":"280","messageId":"281","endLine":33,"endColumn":25},{"ruleId":"278","severity":1,"message":"322","line":65,"column":10,"nodeType":"280","messageId":"281","endLine":65,"endColumn":44},{"ruleId":"314","severity":1,"message":"323","line":600,"column":35,"nodeType":"316","messageId":"317","endLine":600,"endColumn":37},{"ruleId":"314","severity":1,"message":"323","line":601,"column":35,"nodeType":"316","messageId":"317","endLine":601,"endColumn":37},{"ruleId":"314","severity":1,"message":"323","line":602,"column":35,"nodeType":"316","messageId":"317","endLine":602,"endColumn":37},{"ruleId":"278","severity":1,"message":"324","line":662,"column":10,"nodeType":"280","messageId":"281","endLine":662,"endColumn":18},{"ruleId":"325","severity":1,"message":"326","line":683,"column":6,"nodeType":"327","endLine":683,"endColumn":8,"suggestions":"328"},{"ruleId":"278","severity":1,"message":"329","line":776,"column":9,"nodeType":"280","messageId":"281","endLine":776,"endColumn":25},{"ruleId":"278","severity":1,"message":"330","line":4,"column":8,"nodeType":"280","messageId":"281","endLine":4,"endColumn":13},{"ruleId":"278","severity":1,"message":"318","line":138,"column":11,"nodeType":"280","messageId":"281","endLine":138,"endColumn":22},{"ruleId":"278","severity":1,"message":"331","line":5,"column":5,"nodeType":"280","messageId":"281","endLine":5,"endColumn":13},{"ruleId":"278","severity":1,"message":"332","line":13,"column":5,"nodeType":"280","messageId":"281","endLine":13,"endColumn":12},{"ruleId":"278","severity":1,"message":"333","line":14,"column":5,"nodeType":"280","messageId":"281","endLine":14,"endColumn":12},{"ruleId":"314","severity":1,"message":"315","line":30,"column":30,"nodeType":"316","messageId":"317","endLine":30,"endColumn":32},{"ruleId":"274","replacedBy":"334"},{"ruleId":"276","replacedBy":"335"},{"ruleId":"274","replacedBy":"336"},{"ruleId":"276","replacedBy":"337"},{"ruleId":"278","severity":1,"message":"279","line":9,"column":9,"nodeType":"280","messageId":"281","endLine":9,"endColumn":21},{"ruleId":"278","severity":1,"message":"282","line":9,"column":23,"nodeType":"280","messageId":"281","endLine":9,"endColumn":30},{"ruleId":"278","severity":1,"message":"283","line":10,"column":26,"nodeType":"280","messageId":"281","endLine":10,"endColumn":38},{"ruleId":"278","severity":1,"message":"284","line":14,"column":7,"nodeType":"280","messageId":"281","endLine":14,"endColumn":15},{"ruleId":"278","severity":1,"message":"285","line":16,"column":7,"nodeType":"280","messageId":"281","endLine":16,"endColumn":23},{"ruleId":"286","severity":1,"message":"287","line":147,"column":11,"nodeType":"288","messageId":"289","endLine":148,"endColumn":18},{"ruleId":"278","severity":1,"message":"294","line":9,"column":8,"nodeType":"280","messageId":"281","endLine":9,"endColumn":14},{"ruleId":"278","severity":1,"message":"295","line":10,"column":8,"nodeType":"280","messageId":"281","endLine":10,"endColumn":21},{"ruleId":"278","severity":1,"message":"296","line":11,"column":8,"nodeType":"280","messageId":"281","endLine":11,"endColumn":21},{"ruleId":"278","severity":1,"message":"297","line":12,"column":8,"nodeType":"280","messageId":"281","endLine":12,"endColumn":19},{"ruleId":"278","severity":1,"message":"298","line":105,"column":9,"nodeType":"280","messageId":"281","endLine":105,"endColumn":27},{"ruleId":"278","severity":1,"message":"299","line":14,"column":22,"nodeType":"280","messageId":"281","endLine":14,"endColumn":26},{"ruleId":"278","severity":1,"message":"291","line":3,"column":8,"nodeType":"280","messageId":"281","endLine":3,"endColumn":11},{"ruleId":"278","severity":1,"message":"292","line":4,"column":8,"nodeType":"280","messageId":"281","endLine":4,"endColumn":13},{"ruleId":"278","severity":1,"message":"293","line":21,"column":7,"nodeType":"280","messageId":"281","endLine":21,"endColumn":13},{"ruleId":"278","severity":1,"message":"290","line":5,"column":8,"nodeType":"280","messageId":"281","endLine":5,"endColumn":15},{"ruleId":"278","severity":1,"message":"300","line":1,"column":8,"nodeType":"280","messageId":"281","endLine":1,"endColumn":13},{"ruleId":"301","severity":1,"message":"302","line":25,"column":7,"nodeType":"303","messageId":"304","endLine":25,"endColumn":12},{"ruleId":"301","severity":1,"message":"302","line":28,"column":7,"nodeType":"303","messageId":"304","endLine":28,"endColumn":12},{"ruleId":"301","severity":1,"message":"302","line":31,"column":7,"nodeType":"303","messageId":"304","endLine":31,"endColumn":12},{"ruleId":"301","severity":1,"message":"302","line":34,"column":7,"nodeType":"303","messageId":"304","endLine":34,"endColumn":12},{"ruleId":"301","severity":1,"message":"302","line":37,"column":7,"nodeType":"303","messageId":"304","endLine":37,"endColumn":12},{"ruleId":"301","severity":1,"message":"302","line":40,"column":7,"nodeType":"303","messageId":"304","endLine":40,"endColumn":12},{"ruleId":"301","severity":1,"message":"302","line":43,"column":7,"nodeType":"303","messageId":"304","endLine":43,"endColumn":12},{"ruleId":"301","severity":1,"message":"302","line":46,"column":7,"nodeType":"303","messageId":"304","endLine":46,"endColumn":12},{"ruleId":"301","severity":1,"message":"302","line":49,"column":7,"nodeType":"303","messageId":"304","endLine":49,"endColumn":12},{"ruleId":"301","severity":1,"message":"302","line":52,"column":7,"nodeType":"303","messageId":"304","endLine":52,"endColumn":12},{"ruleId":"278","severity":1,"message":"319","line":2,"column":10,"nodeType":"280","messageId":"281","endLine":2,"endColumn":21},{"ruleId":"278","severity":1,"message":"320","line":18,"column":27,"nodeType":"280","messageId":"281","endLine":18,"endColumn":48},{"ruleId":"278","severity":1,"message":"299","line":33,"column":15,"nodeType":"280","messageId":"281","endLine":33,"endColumn":19},{"ruleId":"278","severity":1,"message":"321","line":33,"column":21,"nodeType":"280","messageId":"281","endLine":33,"endColumn":25},{"ruleId":"278","severity":1,"message":"322","line":65,"column":10,"nodeType":"280","messageId":"281","endLine":65,"endColumn":44},{"ruleId":"314","severity":1,"message":"323","line":600,"column":35,"nodeType":"316","messageId":"317","endLine":600,"endColumn":37},{"ruleId":"314","severity":1,"message":"323","line":601,"column":35,"nodeType":"316","messageId":"317","endLine":601,"endColumn":37},{"ruleId":"314","severity":1,"message":"323","line":602,"column":35,"nodeType":"316","messageId":"317","endLine":602,"endColumn":37},{"ruleId":"278","severity":1,"message":"324","line":662,"column":10,"nodeType":"280","messageId":"281","endLine":662,"endColumn":18},{"ruleId":"325","severity":1,"message":"326","line":683,"column":6,"nodeType":"327","endLine":683,"endColumn":8,"suggestions":"338"},{"ruleId":"278","severity":1,"message":"329","line":776,"column":9,"nodeType":"280","messageId":"281","endLine":776,"endColumn":25},{"ruleId":"278","severity":1,"message":"305","line":47,"column":9,"nodeType":"280","messageId":"281","endLine":47,"endColumn":19},{"ruleId":"278","severity":1,"message":"306","line":2,"column":8,"nodeType":"280","messageId":"281","endLine":2,"endColumn":13},{"ruleId":"278","severity":1,"message":"294","line":10,"column":8,"nodeType":"280","messageId":"281","endLine":10,"endColumn":14},{"ruleId":"278","severity":1,"message":"307","line":15,"column":10,"nodeType":"280","messageId":"281","endLine":15,"endColumn":16},{"ruleId":"278","severity":1,"message":"308","line":30,"column":9,"nodeType":"280","messageId":"281","endLine":30,"endColumn":23},{"ruleId":"278","severity":1,"message":"309","line":29,"column":8,"nodeType":"280","messageId":"281","endLine":29,"endColumn":17},{"ruleId":"278","severity":1,"message":"310","line":41,"column":10,"nodeType":"280","messageId":"281","endLine":41,"endColumn":22},{"ruleId":"278","severity":1,"message":"311","line":43,"column":10,"nodeType":"280","messageId":"281","endLine":43,"endColumn":24},{"ruleId":"278","severity":1,"message":"312","line":44,"column":10,"nodeType":"280","messageId":"281","endLine":44,"endColumn":20},{"ruleId":"278","severity":1,"message":"313","line":209,"column":9,"nodeType":"280","messageId":"281","endLine":209,"endColumn":21},{"ruleId":"314","severity":1,"message":"315","line":267,"column":19,"nodeType":"316","messageId":"317","endLine":267,"endColumn":21},{"ruleId":"278","severity":1,"message":"305","line":462,"column":9,"nodeType":"280","messageId":"281","endLine":462,"endColumn":19},{"ruleId":"278","severity":1,"message":"318","line":464,"column":9,"nodeType":"280","messageId":"281","endLine":464,"endColumn":20},{"ruleId":"278","severity":1,"message":"330","line":4,"column":8,"nodeType":"280","messageId":"281","endLine":4,"endColumn":13},{"ruleId":"278","severity":1,"message":"318","line":138,"column":11,"nodeType":"280","messageId":"281","endLine":138,"endColumn":22},{"ruleId":"278","severity":1,"message":"331","line":5,"column":5,"nodeType":"280","messageId":"281","endLine":5,"endColumn":13},{"ruleId":"278","severity":1,"message":"332","line":13,"column":5,"nodeType":"280","messageId":"281","endLine":13,"endColumn":12},{"ruleId":"278","severity":1,"message":"333","line":14,"column":5,"nodeType":"280","messageId":"281","endLine":14,"endColumn":12},{"ruleId":"314","severity":1,"message":"315","line":30,"column":30,"nodeType":"316","messageId":"317","endLine":30,"endColumn":32},"no-native-reassign",["339"],"no-negated-in-lhs",["340"],"no-unused-vars","'initialState' is defined but never used.","Identifier","unusedVar","'reducer' is defined but never used.","'W3CWebSocket' is defined but never used.","'ipAdress' is assigned a value but never used.","'WebSocketContext' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'Console' is defined but never used.","'Fan' is defined but never used.","'Gcode' is defined but never used.","'themes' is assigned a value but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogTitle' is defined but never used.","'handleCancelChange' is assigned a value but never used.","'pink' is defined but never used.","'React' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'contextObj' is assigned a value but never used.","'axios' is defined but never used.","'Button' is defined but never used.","'scrollToBottom' is assigned a value but never used.","'AutoSizer' is defined but never used.","'fileSelected' is assigned a value but never used.","'uploadProgress' is assigned a value but never used.","'isSelected' is assigned a value but never used.","'editPanelRef' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'jsonPackage' is assigned a value but never used.","'ButtonGroup' is defined but never used.","'CircularProgressProps' is defined but never used.","'grey' is defined but never used.","'getJsonPackageToolHeadAbsoluteMove' is defined but never used.","Expected '===' and instead saw '=='.","'progress' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'contextObj.isPrinting'. Either include it or remove the dependency array.","ArrayExpression",["341"],"'handleClosedLoop' is assigned a value but never used.","'Input' is defined but never used.","'CanvasJS' is assigned a value but never used.","'yValue1' is assigned a value but never used.","'yValue2' is assigned a value but never used.",["339"],["340"],["339"],["340"],["342"],"no-global-assign","no-unsafe-negation",{"desc":"343","fix":"344"},{"desc":"343","fix":"345"},"Update the dependencies array to be: [contextObj.isPrinting]",{"range":"346","text":"347"},{"range":"348","text":"347"},[21614,21616],"[contextObj.isPrinting]",[21614,21616]]